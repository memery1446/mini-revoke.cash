{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  const wallet = useSelector(state => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n  const fetchApprovals = async () => {\n    try {\n      console.log(\"üîç Fetching ERC-20 approvals...\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const walletAddress = await signer.getAddress();\n      console.log(\"üõ†Ô∏è Calling getERC20Approvals with:\");\n      console.log(\"   üè¶ Wallet Address:\", walletAddress, typeof walletAddress);\n      console.log(\"   üîë Signer Address:\", await signer.getAddress(), typeof (await signer.getAddress()));\n      console.log(\"   üåê Provider:\", provider, typeof provider);\n      console.log(\"   üßê Signer Object:\", signer, typeof signer);\n      const signerAddress = await signer.getAddress(); // Extract only the address, not the object\n\n      console.log(\"üö® Debug: Parameters being passed:\");\n      console.log(\"walletAddress:\", walletAddress);\n      console.log(\"signerAddress:\", signerAddress); // Corrected to pass only the address\n      console.log(\"provider:\", provider);\n      const erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, provider);\n      console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n      setApprovals(erc20Approvals);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching approvals:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), approvals.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [approval.spender, \": \", approval.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ExistingApprovals, \"eZwHlsgbKx1sS/BVIfH8xojLmSc=\", false, function () {\n  return [useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","getERC20Approvals","jsxDEV","_jsxDEV","ExistingApprovals","_s","wallet","state","web3","account","approvals","setApprovals","window","ethereum","fetchApprovals","console","log","provider","providers","Web3Provider","signer","getSigner","walletAddress","getAddress","signerAddress","erc20Approvals","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","approval","index","spender","amount","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\n\nconst ExistingApprovals = () => {\n  const wallet = useSelector((state) => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n\nconst fetchApprovals = async () => {\n  try {\n    console.log(\"üîç Fetching ERC-20 approvals...\");\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const walletAddress = await signer.getAddress();\n\nconsole.log(\"üõ†Ô∏è Calling getERC20Approvals with:\");\nconsole.log(\"   üè¶ Wallet Address:\", walletAddress, typeof walletAddress);\nconsole.log(\"   üîë Signer Address:\", await signer.getAddress(), typeof (await signer.getAddress()));\nconsole.log(\"   üåê Provider:\", provider, typeof provider);\nconsole.log(\"   üßê Signer Object:\", signer, typeof signer);\n\nconst signerAddress = await signer.getAddress(); // Extract only the address, not the object\n\nconsole.log(\"üö® Debug: Parameters being passed:\");\nconsole.log(\"walletAddress:\", walletAddress);\nconsole.log(\"signerAddress:\", signerAddress); // Corrected to pass only the address\nconsole.log(\"provider:\", provider);\n\nconst erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, provider);\n\n\n\n    console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n    setApprovals(erc20Approvals);\n  } catch (error) {\n    console.error(\"‚ùå Error fetching approvals:\", error);\n  }\n};\n\n\n\n  return (\n    <div>\n      <h3>Existing Approvals</h3>\n      {approvals.length > 0 ? (\n        <ul>\n          {approvals.map((approval, index) => (\n            <li key={index}>{approval.spender}: {approval.amount}</li>\n          ))}\n        </ul>\n      ) : (\n        <p>No approvals found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ExistingApprovals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}