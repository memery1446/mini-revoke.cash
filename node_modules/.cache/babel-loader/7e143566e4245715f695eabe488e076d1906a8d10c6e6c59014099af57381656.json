{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = require(\"zustand\");\nconst traditional_1 = require(\"zustand/traditional\");\nlet DynamicProvider;\nfunction importProvider() {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (DynamicProvider === undefined) {\n      try {\n        const {\n          Web3Provider\n        } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n        DynamicProvider = Web3Provider;\n      } catch (_a) {\n        console.debug('@ethersproject/providers not available');\n        DynamicProvider = null;\n      }\n    }\n  });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n  const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n  const connector = f(actions);\n  const stateHooks = getStateHooks(store);\n  const derivedHooks = getDerivedHooks(stateHooks);\n  const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n  return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({\n  chainId,\n  accounts,\n  activating\n}) {\n  return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n  function getIndex(connector) {\n    const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n    if (index === -1) throw new Error('Connector not found');\n    return index;\n  }\n  function useSelectedStore(connector) {\n    const store = initializedConnectors[getIndex(connector)][2];\n    if (!store) throw new Error('Stores not passed');\n    return store;\n  }\n  // the following code calls hooks in a map a lot, which violates the eslint rule.\n  // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n  function useSelectedChainId(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useChainId\n    }]) => useChainId());\n    return values[getIndex(connector)];\n  }\n  function useSelectedAccounts(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useAccounts\n    }]) => useAccounts());\n    return values[getIndex(connector)];\n  }\n  function useSelectedIsActivating(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useIsActivating\n    }]) => useIsActivating());\n    return values[getIndex(connector)];\n  }\n  function useSelectedAccount(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useAccount\n    }]) => useAccount());\n    return values[getIndex(connector)];\n  }\n  function useSelectedIsActive(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useIsActive\n    }]) => useIsActive());\n    return values[getIndex(connector)];\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n  function useSelectedProvider(connector, network) {\n    const index = getIndex(connector);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useProvider\n    }], i) => useProvider(network, i === index));\n    return values[index];\n  }\n  function useSelectedENSNames(connector, provider) {\n    const index = getIndex(connector);\n    const values = initializedConnectors.map(([, {\n      useENSNames\n    }], i) =>\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useENSNames(i === index ? provider : undefined));\n    return values[index];\n  }\n  function useSelectedENSName(connector, provider) {\n    const index = getIndex(connector);\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useENSName\n    }], i) => useENSName(i === index ? provider : undefined));\n    return values[index];\n  }\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n  const {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  } = getSelectedConnector(...initializedConnectors);\n  function usePriorityConnector() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(([, {\n      useIsActive\n    }]) => useIsActive());\n    const index = values.findIndex(isActive => isActive);\n    return initializedConnectors[index === -1 ? 0 : index][0];\n  }\n  function usePriorityStore() {\n    return useSelectedStore(usePriorityConnector());\n  }\n  function usePriorityChainId() {\n    return useSelectedChainId(usePriorityConnector());\n  }\n  function usePriorityAccounts() {\n    return useSelectedAccounts(usePriorityConnector());\n  }\n  function usePriorityIsActivating() {\n    return useSelectedIsActivating(usePriorityConnector());\n  }\n  function usePriorityAccount() {\n    return useSelectedAccount(usePriorityConnector());\n  }\n  function usePriorityIsActive() {\n    return useSelectedIsActive(usePriorityConnector());\n  }\n  /**\n   * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n   * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n   * property, over all connectors.\n   */\n  function usePriorityProvider(network) {\n    return useSelectedProvider(usePriorityConnector(), network);\n  }\n  function usePriorityENSNames(provider) {\n    return useSelectedENSNames(usePriorityConnector(), provider);\n  }\n  function usePriorityENSName(provider) {\n    return useSelectedENSName(usePriorityConnector(), provider);\n  }\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName,\n    usePriorityConnector,\n    usePriorityStore,\n    usePriorityChainId,\n    usePriorityAccounts,\n    usePriorityIsActivating,\n    usePriorityAccount,\n    usePriorityIsActive,\n    usePriorityProvider,\n    usePriorityENSNames,\n    usePriorityENSName\n  };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = ({\n  chainId\n}) => chainId;\nconst ACCOUNTS = ({\n  accounts\n}) => accounts;\nconst ACTIVATING = ({\n  activating\n}) => activating;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => oldAccounts === undefined && newAccounts === undefined || oldAccounts !== undefined && oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) && oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]);\nfunction getStateHooks(store) {\n  function useChainId() {\n    return (0, zustand_1.useStore)(store, CHAIN_ID);\n  }\n  function useAccounts() {\n    return (0, traditional_1.useStoreWithEqualityFn)(store, ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n  }\n  function useIsActivating() {\n    return (0, zustand_1.useStore)(store, ACTIVATING);\n  }\n  return {\n    useChainId,\n    useAccounts,\n    useIsActivating\n  };\n}\nfunction getDerivedHooks({\n  useChainId,\n  useAccounts,\n  useIsActivating\n}) {\n  function useAccount() {\n    var _a;\n    return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n  }\n  function useIsActive() {\n    const chainId = useChainId();\n    const accounts = useAccounts();\n    const activating = useIsActivating();\n    return computeIsActive({\n      chainId,\n      accounts,\n      activating\n    });\n  }\n  return {\n    useAccount,\n    useIsActive\n  };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider, accounts = []) {\n  const [ENSNames, setENSNames] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    if (provider && accounts.length) {\n      let stale = false;\n      Promise.all(accounts.map(account => provider.lookupAddress(account))).then(ENSNames => {\n        if (stale) return;\n        setENSNames(ENSNames);\n      }).catch(error => {\n        if (stale) return;\n        console.debug('Could not fetch ENS names', error);\n        setENSNames(new Array(accounts.length).fill(null));\n      });\n      return () => {\n        stale = true;\n        setENSNames(undefined);\n      };\n    }\n  }, [provider, accounts]);\n  return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, {\n  useAccounts,\n  useChainId\n}, {\n  useAccount,\n  useIsActive\n}) {\n  /**\n   * Avoid type erasure by returning the most qualified type if not otherwise set.\n   * Note that this function's return type is `T | undefined`, but there is a code path\n   * that returns a Web3Provider, which could conflict with a user-provided T. So,\n   * it's important that users only provide an override for T if they know that\n   * `connector.customProvider` is going to be defined and of type T.\n   *\n   * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n   * must match the type of this property.\n   */\n  function useProvider(network, enabled = true) {\n    const isActive = useIsActive();\n    const chainId = useChainId();\n    // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n    const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n    (0, react_1.useEffect)(() => {\n      if (loaded) return;\n      let stale = false;\n      void importProvider().then(() => {\n        if (stale) return;\n        setLoaded(true);\n      });\n      return () => {\n        stale = true;\n      };\n    }, [loaded]);\n    return (0, react_1.useMemo)(() => {\n      // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n      void loaded && isActive && chainId;\n      if (enabled) {\n        if (connector.customProvider) return connector.customProvider;\n        // see tsdoc note above for return type explanation.\n        else if (DynamicProvider && connector.provider) return new DynamicProvider(connector.provider, network);\n      }\n    }, [loaded, enabled, isActive, chainId, network]);\n  }\n  function useENSNames(provider) {\n    const accounts = useAccounts();\n    return useENS(provider, accounts);\n  }\n  function useENSName(provider) {\n    var _a;\n    const account = useAccount();\n    const accounts = (0, react_1.useMemo)(() => account === undefined ? undefined : [account], [account]);\n    return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n  }\n  return {\n    useProvider,\n    useENSNames,\n    useENSName\n  };\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","exports","getPriorityConnector","getSelectedConnector","initializeConnector","store_1","require","react_1","zustand_1","traditional_1","DynamicProvider","importProvider","Web3Provider","_a","console","debug","f","store","actions","createWeb3ReactStoreAndActions","connector","stateHooks","getStateHooks","derivedHooks","getDerivedHooks","augmentedHooks","getAugmentedHooks","assign","computeIsActive","chainId","accounts","activating","Boolean","initializedConnectors","getIndex","index","findIndex","initializedConnector","Error","useSelectedStore","useSelectedChainId","values","map","useChainId","useSelectedAccounts","useAccounts","useSelectedIsActivating","useIsActivating","useSelectedAccount","useAccount","useSelectedIsActive","useIsActive","useSelectedProvider","network","useProvider","i","useSelectedENSNames","provider","useENSNames","useSelectedENSName","useENSName","usePriorityConnector","isActive","usePriorityStore","usePriorityChainId","usePriorityAccounts","usePriorityIsActivating","usePriorityAccount","usePriorityIsActive","usePriorityProvider","usePriorityENSNames","usePriorityENSName","CHAIN_ID","ACCOUNTS","ACTIVATING","ACCOUNTS_EQUALITY_CHECKER","oldAccounts","newAccounts","length","every","oldAccount","useStore","useStoreWithEqualityFn","useENS","ENSNames","setENSNames","useState","useEffect","stale","all","account","lookupAddress","catch","error","Array","fill","enabled","loaded","setLoaded","useMemo","customProvider"],"sources":["/Users/markemery/mini.revoke/node_modules/@web3-react/core/dist/hooks.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = require(\"zustand\");\nconst traditional_1 = require(\"zustand/traditional\");\nlet DynamicProvider;\nfunction importProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (DynamicProvider === undefined) {\n            try {\n                const { Web3Provider } = yield Promise.resolve().then(() => __importStar(require('@ethersproject/providers')));\n                DynamicProvider = Web3Provider;\n            }\n            catch (_a) {\n                console.debug('@ethersproject/providers not available');\n                DynamicProvider = null;\n            }\n        }\n    });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n    const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n    const connector = f(actions);\n    const stateHooks = getStateHooks(store);\n    const derivedHooks = getDerivedHooks(stateHooks);\n    const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n    return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({ chainId, accounts, activating }) {\n    return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n    function getIndex(connector) {\n        const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n        if (index === -1)\n            throw new Error('Connector not found');\n        return index;\n    }\n    function useSelectedStore(connector) {\n        const store = initializedConnectors[getIndex(connector)][2];\n        if (!store)\n            throw new Error('Stores not passed');\n        return store;\n    }\n    // the following code calls hooks in a map a lot, which violates the eslint rule.\n    // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n    function useSelectedChainId(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useChainId }]) => useChainId());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccounts(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccounts }]) => useAccounts());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActivating(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActivating }]) => useIsActivating());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccount(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccount }]) => useAccount());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActive(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        return values[getIndex(connector)];\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function useSelectedProvider(connector, network) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useProvider }], i) => useProvider(network, i === index));\n        return values[index];\n    }\n    function useSelectedENSNames(connector, provider) {\n        const index = getIndex(connector);\n        const values = initializedConnectors.map(([, { useENSNames }], i) => \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined));\n        return values[index];\n    }\n    function useSelectedENSName(connector, provider) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useENSName }], i) => useENSName(i === index ? provider : undefined));\n        return values[index];\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n    };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n    const { useSelectedStore, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = getSelectedConnector(...initializedConnectors);\n    function usePriorityConnector() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        const index = values.findIndex((isActive) => isActive);\n        return initializedConnectors[index === -1 ? 0 : index][0];\n    }\n    function usePriorityStore() {\n        return useSelectedStore(usePriorityConnector());\n    }\n    function usePriorityChainId() {\n        return useSelectedChainId(usePriorityConnector());\n    }\n    function usePriorityAccounts() {\n        return useSelectedAccounts(usePriorityConnector());\n    }\n    function usePriorityIsActivating() {\n        return useSelectedIsActivating(usePriorityConnector());\n    }\n    function usePriorityAccount() {\n        return useSelectedAccount(usePriorityConnector());\n    }\n    function usePriorityIsActive() {\n        return useSelectedIsActive(usePriorityConnector());\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function usePriorityProvider(network) {\n        return useSelectedProvider(usePriorityConnector(), network);\n    }\n    function usePriorityENSNames(provider) {\n        return useSelectedENSNames(usePriorityConnector(), provider);\n    }\n    function usePriorityENSName(provider) {\n        return useSelectedENSName(usePriorityConnector(), provider);\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n        usePriorityConnector,\n        usePriorityStore,\n        usePriorityChainId,\n        usePriorityAccounts,\n        usePriorityIsActivating,\n        usePriorityAccount,\n        usePriorityIsActive,\n        usePriorityProvider,\n        usePriorityENSNames,\n        usePriorityENSName,\n    };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = ({ chainId }) => chainId;\nconst ACCOUNTS = ({ accounts }) => accounts;\nconst ACTIVATING = ({ activating }) => activating;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => (oldAccounts === undefined && newAccounts === undefined) ||\n    (oldAccounts !== undefined &&\n        oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) &&\n        oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]));\nfunction getStateHooks(store) {\n    function useChainId() {\n        return (0, zustand_1.useStore)(store, CHAIN_ID);\n    }\n    function useAccounts() {\n        return (0, traditional_1.useStoreWithEqualityFn)(store, ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n    }\n    function useIsActivating() {\n        return (0, zustand_1.useStore)(store, ACTIVATING);\n    }\n    return { useChainId, useAccounts, useIsActivating };\n}\nfunction getDerivedHooks({ useChainId, useAccounts, useIsActivating }) {\n    function useAccount() {\n        var _a;\n        return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    function useIsActive() {\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        const activating = useIsActivating();\n        return computeIsActive({\n            chainId,\n            accounts,\n            activating,\n        });\n    }\n    return { useAccount, useIsActive };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider, accounts = []) {\n    const [ENSNames, setENSNames] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (provider && accounts.length) {\n            let stale = false;\n            Promise.all(accounts.map((account) => provider.lookupAddress(account)))\n                .then((ENSNames) => {\n                if (stale)\n                    return;\n                setENSNames(ENSNames);\n            })\n                .catch((error) => {\n                if (stale)\n                    return;\n                console.debug('Could not fetch ENS names', error);\n                setENSNames(new Array(accounts.length).fill(null));\n            });\n            return () => {\n                stale = true;\n                setENSNames(undefined);\n            };\n        }\n    }, [provider, accounts]);\n    return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, { useAccounts, useChainId }, { useAccount, useIsActive }) {\n    /**\n     * Avoid type erasure by returning the most qualified type if not otherwise set.\n     * Note that this function's return type is `T | undefined`, but there is a code path\n     * that returns a Web3Provider, which could conflict with a user-provided T. So,\n     * it's important that users only provide an override for T if they know that\n     * `connector.customProvider` is going to be defined and of type T.\n     *\n     * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n     * must match the type of this property.\n     */\n    function useProvider(network, enabled = true) {\n        const isActive = useIsActive();\n        const chainId = useChainId();\n        // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n        const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n        (0, react_1.useEffect)(() => {\n            if (loaded)\n                return;\n            let stale = false;\n            void importProvider().then(() => {\n                if (stale)\n                    return;\n                setLoaded(true);\n            });\n            return () => {\n                stale = true;\n            };\n        }, [loaded]);\n        return (0, react_1.useMemo)(() => {\n            // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n            void loaded && isActive && chainId;\n            if (enabled) {\n                if (connector.customProvider)\n                    return connector.customProvider;\n                // see tsdoc note above for return type explanation.\n                else if (DynamicProvider && connector.provider)\n                    return new DynamicProvider(connector.provider, network);\n            }\n        }, [loaded, enabled, isActive, chainId, network]);\n    }\n    function useENSNames(provider) {\n        const accounts = useAccounts();\n        return useENS(provider, accounts);\n    }\n    function useENSName(provider) {\n        var _a;\n        const account = useAccount();\n        const accounts = (0, react_1.useMemo)(() => (account === undefined ? undefined : [account]), [account]);\n        return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    return { useProvider, useENSNames, useENSName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}