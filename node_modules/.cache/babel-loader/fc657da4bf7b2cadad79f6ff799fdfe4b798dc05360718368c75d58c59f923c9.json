{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  const wallet = useSelector(state => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n  const fetchApprovals = async () => {\n    try {\n      console.log(\"üîç Fetching ERC-20 approvals...\");\n\n      // ‚úÖ Hardhat local node setup, explicitly disabling ENS\n      const customProvider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 1337\n      });\n\n      // ‚úÖ Ensure ENS resolution is disabled\n      customProvider.getResolver = async () => {\n        console.error(\"üö® ENS resolution attempted! ENS is disabled.\");\n        throw new Error(\"ENS resolution is disabled on this network.\");\n      };\n      const signer = customProvider.getSigner();\n      const walletAddress = await signer.getAddress();\n      const address = ethers.utils.getAddress(walletAddress);\n      console.log(\"‚úÖ Wallet Address:\", wallet);\n      console.log(\"‚úÖ Resolved Signer Address:\", address);\n      console.log(\"‚úÖ Provider:\", customProvider);\n      const tokenContracts = [\"0xTokenAddress1\", \"0xTokenAddress2\"]; // Replace with actual token addresses\n\n      console.log(\"üö® Debug: Parameters being passed:\", {\n        walletAddress: address,\n        provider: customProvider\n      });\n      if (!ethers.utils.isAddress(walletAddress)) {\n        throw new Error(`‚ùå Invalid Ethereum address detected: ${walletAddress}`);\n      }\n      console.log(\"‚úÖ Addresses are valid. Fetching approvals...\");\n      const erc20Approvals = await getERC20Approvals(tokenContracts, walletAddress, customProvider);\n      console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n      setApprovals(erc20Approvals);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching approvals:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing ERC-20 Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), approvals.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Spender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), \" \", approval.spender, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 76\n        }, this), \" \", approval.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(ExistingApprovals, \"eZwHlsgbKx1sS/BVIfH8xojLmSc=\", false, function () {\n  return [useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","getERC20Approvals","jsxDEV","_jsxDEV","ExistingApprovals","_s","wallet","state","web3","account","approvals","setApprovals","window","ethereum","fetchApprovals","console","log","customProvider","providers","JsonRpcProvider","name","chainId","getResolver","error","Error","signer","getSigner","walletAddress","getAddress","address","utils","tokenContracts","provider","isAddress","erc20Approvals","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","approval","index","spender","amount","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\n\nconst ExistingApprovals = () => {\n    const wallet = useSelector((state) => state.web3.account);\n    const [approvals, setApprovals] = useState([]);\n\n    useEffect(() => {\n        if (wallet && window.ethereum) {\n            fetchApprovals();\n        }\n    }, [wallet]);\n\n    const fetchApprovals = async () => {\n        try {\n            console.log(\"üîç Fetching ERC-20 approvals...\");\n\n            // ‚úÖ Hardhat local node setup, explicitly disabling ENS\n            const customProvider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n                name: \"hardhat\",\n                chainId: 1337,\n            });\n\n            // ‚úÖ Ensure ENS resolution is disabled\n            customProvider.getResolver = async () => {\n                console.error(\"üö® ENS resolution attempted! ENS is disabled.\");\n                throw new Error(\"ENS resolution is disabled on this network.\");\n            };\n\n            const signer = customProvider.getSigner();\n            const walletAddress = await signer.getAddress();\n            const address = ethers.utils.getAddress(walletAddress);\n\n            console.log(\"‚úÖ Wallet Address:\", wallet);\n            console.log(\"‚úÖ Resolved Signer Address:\", address);\n            console.log(\"‚úÖ Provider:\", customProvider);\n\n            const tokenContracts = [\n                \"0xTokenAddress1\",\n                \"0xTokenAddress2\",\n            ]; // Replace with actual token addresses\n\n            console.log(\"üö® Debug: Parameters being passed:\", {\n                walletAddress: address,\n                provider: customProvider,\n            });\n\n            if (!ethers.utils.isAddress(walletAddress)) {\n                throw new Error(`‚ùå Invalid Ethereum address detected: ${walletAddress}`);\n            }\n\n            console.log(\"‚úÖ Addresses are valid. Fetching approvals...\");\n\n            const erc20Approvals = await getERC20Approvals(tokenContracts, walletAddress, customProvider);\n            console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n            setApprovals(erc20Approvals);\n        } catch (error) {\n            console.error(\"‚ùå Error fetching approvals:\", error);\n        }\n    };\n\n    return (\n        <div>\n            <h3>Existing ERC-20 Approvals</h3>\n            {approvals.length > 0 ? (\n                <ul>\n                    {approvals.map((approval, index) => (\n                        <li key={index}>\n                            <strong>Spender:</strong> {approval.spender} | <strong>Amount:</strong> {approval.amount}\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No approvals found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default ExistingApprovals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}