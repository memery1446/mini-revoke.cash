{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  const wallet = useSelector(state => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n  const fetchApprovals = async () => {\n    try {\n      console.log(\"üîç Fetching ERC-20 approvals...\");\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      provider.network.ensAddress = null; // üöÄ Kill ENS resolution\n\n      await provider.ready; // Ensure provider has loaded network data\n      const signer = provider.getSigner();\n      const walletAddress = await signer.getAddress();\n      console.log(\"‚úÖ Wallet Address from Redux:\", wallet);\n      console.log(\"‚úÖ Resolved Signer Address:\", walletAddress);\n      console.log(\"‚úÖ Provider:\", provider);\n\n      // üî• Force the network to Hardhat/local\n      const network = {\n        chainId: 31337,\n        name: \"hardhat\"\n      };\n      console.log(\"‚úÖ Using predefined network:\", network);\n      const address = ethers.utils.getAddress(walletAddress); // Ensure checksum address\n      console.log(\"‚úÖ Checksum Wallet Address:\", address);\n      const signerAddress = await signer.getAddress();\n      console.log(\"üö® Debug: Parameters being passed:\");\n      console.log(\"walletAddress:\", walletAddress);\n      console.log(\"signerAddress:\", signerAddress);\n      console.log(\"provider:\", provider);\n      const erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, provider);\n      setApprovals(erc20Approvals);\n      console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n    } catch (error) {\n      console.error(\"‚ùå Error fetching approvals:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing ERC-20 Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), approvals.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Spender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), \" \", approval.spender, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 62\n        }, this), \" \", approval.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(ExistingApprovals, \"eZwHlsgbKx1sS/BVIfH8xojLmSc=\", false, function () {\n  return [useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","getERC20Approvals","jsxDEV","_jsxDEV","ExistingApprovals","_s","wallet","state","web3","account","approvals","setApprovals","window","ethereum","fetchApprovals","console","log","provider","providers","Web3Provider","network","ensAddress","ready","signer","getSigner","walletAddress","getAddress","chainId","name","address","utils","signerAddress","erc20Approvals","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","approval","index","spender","amount","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\n\nconst ExistingApprovals = () => {\n  const wallet = useSelector((state) => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n\nconst fetchApprovals = async () => {\n  try {\n    console.log(\"üîç Fetching ERC-20 approvals...\");\n\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    provider.network.ensAddress = null; // üöÄ Kill ENS resolution\n\n    await provider.ready; // Ensure provider has loaded network data\n    const signer = provider.getSigner();\n    const walletAddress = await signer.getAddress();\n\n    console.log(\"‚úÖ Wallet Address from Redux:\", wallet);\n    console.log(\"‚úÖ Resolved Signer Address:\", walletAddress);\n    console.log(\"‚úÖ Provider:\", provider);\n\n    // üî• Force the network to Hardhat/local\n    const network = { chainId: 31337, name: \"hardhat\" };\n    console.log(\"‚úÖ Using predefined network:\", network);\n\n    const address = ethers.utils.getAddress(walletAddress); // Ensure checksum address\n    console.log(\"‚úÖ Checksum Wallet Address:\", address);\n\n    const signerAddress = await signer.getAddress();\n    console.log(\"üö® Debug: Parameters being passed:\");\n    console.log(\"walletAddress:\", walletAddress);\n    console.log(\"signerAddress:\", signerAddress);\n    console.log(\"provider:\", provider);\n\n    const erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, provider);\n    setApprovals(erc20Approvals);\n    console.log(\"‚úÖ ERC-20 Approvals:\", erc20Approvals);\n  } catch (error) {\n    console.error(\"‚ùå Error fetching approvals:\", error);\n  }\n};\n\n\n\n  return (\n    <div>\n      <h3>Existing ERC-20 Approvals</h3>\n      {approvals.length > 0 ? (\n        <ul>\n          {approvals.map((approval, index) => (\n            <li key={index}>\n              <strong>Spender:</strong> {approval.spender} | <strong>Amount:</strong> {approval.amount}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No approvals found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ExistingApprovals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}