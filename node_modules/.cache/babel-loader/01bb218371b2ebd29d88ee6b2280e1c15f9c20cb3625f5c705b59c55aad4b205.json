{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/NetworkSelector.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserProvider } from \"ethers\";\nimport { NETWORK_CONFIG } from \"../constants/abis\"; // ✅ Import network details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedNetworks = {\n  1: {\n    chainId: \"0x1\",\n    name: \"Ethereum Mainnet\"\n  },\n  56: {\n    chainId: \"0x38\",\n    name: \"Binance Smart Chain\"\n  },\n  137: {\n    chainId: \"0x89\",\n    name: \"Polygon\"\n  },\n  // ✅ Ensure correct hex format\n  80001: {\n    chainId: \"0x13881\",\n    name: \"Polygon Mumbai\"\n  },\n  97: {\n    chainId: \"0x61\",\n    name: \"BSC Testnet\"\n  }\n};\nconst switchNetwork = async hexChainId => {\n  try {\n    console.log(`🔄 Attempting to switch to chain: ${hexChainId}`);\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: hexChainId\n      }] // ✅ MetaMask requires `0x` prefixed hex\n    });\n    console.log(`✅ Successfully switched to network ${hexChainId}`);\n  } catch (error) {\n    console.error(\"❌ Error switching network:\", error);\n    if (error.code === 4902) {\n      alert(\"Network not added to MetaMask! Please add it manually.\");\n    }\n  }\n};\nconst NetworkSelector = ({\n  setSelectedNetwork\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Select Network:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select w-50 mx-auto\",\n      onChange: e => switchNetwork(e.target.value),\n      children: Object.entries(supportedNetworks).map(([id, net]) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: net.chainId,\n        children: net.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = NetworkSelector;\nexport default NetworkSelector;\nvar _c;\n$RefreshReg$(_c, \"NetworkSelector\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","NETWORK_CONFIG","jsxDEV","_jsxDEV","supportedNetworks","chainId","name","switchNetwork","hexChainId","console","log","window","ethereum","request","method","params","error","code","alert","NetworkSelector","setSelectedNetwork","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","entries","map","id","net","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/NetworkSelector.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserProvider } from \"ethers\";\nimport { NETWORK_CONFIG } from \"../constants/abis\"; // ✅ Import network details\n\nconst supportedNetworks = {\n  1: { chainId: \"0x1\", name: \"Ethereum Mainnet\" },\n  56: { chainId: \"0x38\", name: \"Binance Smart Chain\" },\n  137: { chainId: \"0x89\", name: \"Polygon\" }, // ✅ Ensure correct hex format\n  80001: { chainId: \"0x13881\", name: \"Polygon Mumbai\" },\n  97: { chainId: \"0x61\", name: \"BSC Testnet\" },\n};\n\nconst switchNetwork = async (hexChainId) => {\n  try {\n    console.log(`🔄 Attempting to switch to chain: ${hexChainId}`);\n    \n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: hexChainId }], // ✅ MetaMask requires `0x` prefixed hex\n    });\n\n    console.log(`✅ Successfully switched to network ${hexChainId}`);\n  } catch (error) {\n    console.error(\"❌ Error switching network:\", error);\n    \n    if (error.code === 4902) {\n      alert(\"Network not added to MetaMask! Please add it manually.\");\n    }\n  }\n};\n\nconst NetworkSelector = ({ setSelectedNetwork }) => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h5>Select Network:</h5>\n      <select\n        className=\"form-select w-50 mx-auto\"\n        onChange={(e) => switchNetwork(e.target.value)}\n      >\n        {Object.entries(supportedNetworks).map(([id, net]) => (\n          <option key={id} value={net.chainId}>\n            {net.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default NetworkSelector;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,QAAQ;AACxC,SAASC,cAAc,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,iBAAiB,GAAG;EACxB,CAAC,EAAE;IAAEC,OAAO,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAmB,CAAC;EAC/C,EAAE,EAAE;IAAED,OAAO,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAsB,CAAC;EACpD,GAAG,EAAE;IAAED,OAAO,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAU,CAAC;EAAE;EAC3C,KAAK,EAAE;IAAED,OAAO,EAAE,SAAS;IAAEC,IAAI,EAAE;EAAiB,CAAC;EACrD,EAAE,EAAE;IAAED,OAAO,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAc;AAC7C,CAAC;AAED,MAAMC,aAAa,GAAG,MAAOC,UAAU,IAAK;EAC1C,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,qCAAqCF,UAAU,EAAE,CAAC;IAE9D,MAAMG,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;MAC5BC,MAAM,EAAE,4BAA4B;MACpCC,MAAM,EAAE,CAAC;QAAEV,OAAO,EAAEG;MAAW,CAAC,CAAC,CAAE;IACrC,CAAC,CAAC;IAEFC,OAAO,CAACC,GAAG,CAAC,sCAAsCF,UAAU,EAAE,CAAC;EACjE,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdP,OAAO,CAACO,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAElD,IAAIA,KAAK,CAACC,IAAI,KAAK,IAAI,EAAE;MACvBC,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF;AACF,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAmB,CAAC,KAAK;EAClD,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BnB,OAAA;MAAAmB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MACEkB,SAAS,EAAC,0BAA0B;MACpCM,QAAQ,EAAGC,CAAC,IAAKrB,aAAa,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAAR,QAAA,EAE9CS,MAAM,CAACC,OAAO,CAAC5B,iBAAiB,CAAC,CAAC6B,GAAG,CAAC,CAAC,CAACC,EAAE,EAAEC,GAAG,CAAC,kBAC/ChC,OAAA;QAAiB2B,KAAK,EAAEK,GAAG,CAAC9B,OAAQ;QAAAiB,QAAA,EACjCa,GAAG,CAAC7B;MAAI,GADE4B,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACU,EAAA,GAhBIjB,eAAe;AAkBrB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}