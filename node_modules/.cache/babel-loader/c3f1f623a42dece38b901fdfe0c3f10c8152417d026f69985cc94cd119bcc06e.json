{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESSES, ERC1155_ABI } from \"../../src/constants/abis\"; // ‚úÖ Fix import\n\nconst provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n\n/** Function to get ERC-1155 Approvals */\nexport async function getERC1155Approvals(ownerAddress) {\n  if (!ownerAddress || !ethers.utils.isAddress(ownerAddress)) {\n    console.error(`‚ùå Invalid owner address: ${ownerAddress}`);\n    return [];\n  }\n  const approvals = [];\n  const contractAddress = CONTRACT_ADDRESSES.ERC1155;\n  try {\n    console.log(\"üîç Fetching ERC-1155 approvals for contract:\", contractAddress);\n    const contract = new ethers.Contract(contractAddress, ERC1155_ABI, provider);\n    const spenderAddresses = [\"0x43c5df0c482c88cef8005389f64c362ee720a5bc\" // ‚úÖ Test wallet\n    ];\n    for (let spender of spenderAddresses) {\n      console.log(\"üìå Checking Approval for Spender:\", spender);\n      try {\n        const isApproved = await contract.isApprovedForAll(ownerAddress, spender);\n        console.log(\"üîç ERC-1155 Approval Status:\", isApproved);\n        if (isApproved) {\n          approvals.push({\n            contract: contractAddress,\n            type: \"ERC-1155\",\n            spender: spender,\n            approved: true\n          });\n        }\n      } catch (error) {\n        console.error(`‚ùå Error checking ERC-1155 approval for ${spender}:`, error);\n      }\n    }\n  } catch (error) {\n    console.error(\"‚ùå Error fetching ERC-1155 approvals:\", error);\n  }\n  return approvals;\n}","map":{"version":3,"names":["ethers","CONTRACT_ADDRESSES","ERC1155_ABI","provider","providers","JsonRpcProvider","getERC1155Approvals","ownerAddress","utils","isAddress","console","error","approvals","contractAddress","ERC1155","log","contract","Contract","spenderAddresses","spender","isApproved","isApprovedForAll","push","type","approved"],"sources":["/Users/markemery/mini.revoke/src/components/ERC1155Approvals.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESSES, ERC1155_ABI } from \"../../src/constants/abis\"; // ‚úÖ Fix import\n\nconst provider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\");\n\n/** Function to get ERC-1155 Approvals */\nexport async function getERC1155Approvals(ownerAddress) {\n    if (!ownerAddress || !ethers.utils.isAddress(ownerAddress)) {\n        console.error(`‚ùå Invalid owner address: ${ownerAddress}`);\n        return [];\n    }\n\n    const approvals = [];\n    const contractAddress = CONTRACT_ADDRESSES.ERC1155;\n\n    try {\n        console.log(\"üîç Fetching ERC-1155 approvals for contract:\", contractAddress);\n        const contract = new ethers.Contract(contractAddress, ERC1155_ABI, provider);\n\n        const spenderAddresses = [\n            \"0x43c5df0c482c88cef8005389f64c362ee720a5bc\" // ‚úÖ Test wallet\n        ];\n\n        for (let spender of spenderAddresses) {\n            console.log(\"üìå Checking Approval for Spender:\", spender);\n\n            try {\n                const isApproved = await contract.isApprovedForAll(ownerAddress, spender);\n                console.log(\"üîç ERC-1155 Approval Status:\", isApproved);\n\n                if (isApproved) {\n                    approvals.push({\n                        contract: contractAddress,\n                        type: \"ERC-1155\",\n                        spender: spender,\n                        approved: true,\n                    });\n                }\n            } catch (error) {\n                console.error(`‚ùå Error checking ERC-1155 approval for ${spender}:`, error);\n            }\n        }\n    } catch (error) {\n        console.error(\"‚ùå Error fetching ERC-1155 approvals:\", error);\n    }\n\n    return approvals;\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,0BAA0B,CAAC,CAAC;;AAE5E,MAAMC,QAAQ,GAAG,IAAIH,MAAM,CAACI,SAAS,CAACC,eAAe,CAAC,uBAAuB,CAAC;;AAE9E;AACA,OAAO,eAAeC,mBAAmBA,CAACC,YAAY,EAAE;EACpD,IAAI,CAACA,YAAY,IAAI,CAACP,MAAM,CAACQ,KAAK,CAACC,SAAS,CAACF,YAAY,CAAC,EAAE;IACxDG,OAAO,CAACC,KAAK,CAAC,4BAA4BJ,YAAY,EAAE,CAAC;IACzD,OAAO,EAAE;EACb;EAEA,MAAMK,SAAS,GAAG,EAAE;EACpB,MAAMC,eAAe,GAAGZ,kBAAkB,CAACa,OAAO;EAElD,IAAI;IACAJ,OAAO,CAACK,GAAG,CAAC,8CAA8C,EAAEF,eAAe,CAAC;IAC5E,MAAMG,QAAQ,GAAG,IAAIhB,MAAM,CAACiB,QAAQ,CAACJ,eAAe,EAAEX,WAAW,EAAEC,QAAQ,CAAC;IAE5E,MAAMe,gBAAgB,GAAG,CACrB,4CAA4C,CAAC;IAAA,CAChD;IAED,KAAK,IAAIC,OAAO,IAAID,gBAAgB,EAAE;MAClCR,OAAO,CAACK,GAAG,CAAC,mCAAmC,EAAEI,OAAO,CAAC;MAEzD,IAAI;QACA,MAAMC,UAAU,GAAG,MAAMJ,QAAQ,CAACK,gBAAgB,CAACd,YAAY,EAAEY,OAAO,CAAC;QACzET,OAAO,CAACK,GAAG,CAAC,8BAA8B,EAAEK,UAAU,CAAC;QAEvD,IAAIA,UAAU,EAAE;UACZR,SAAS,CAACU,IAAI,CAAC;YACXN,QAAQ,EAAEH,eAAe;YACzBU,IAAI,EAAE,UAAU;YAChBJ,OAAO,EAAEA,OAAO;YAChBK,QAAQ,EAAE;UACd,CAAC,CAAC;QACN;MACJ,CAAC,CAAC,OAAOb,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,0CAA0CQ,OAAO,GAAG,EAAER,KAAK,CAAC;MAC9E;IACJ;EACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;EAChE;EAEA,OAAOC,SAAS;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}