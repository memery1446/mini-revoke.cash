{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/NetworkSelector.js\";\nimport React from \"react\";\nimport { NETWORK_CONFIG } from \"../constants/abis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supportedNetworks = {\n  1: {\n    chainId: \"0x1\",\n    name: \"Ethereum Mainnet\",\n    rpcUrl: \"https://eth-mainnet.alchemyapi.io/v2/YOUR_ALCHEMY_API_KEY\",\n    currency: {\n      name: \"Ether\",\n      symbol: \"ETH\",\n      decimals: 18\n    }\n  },\n  56: {\n    chainId: \"0x38\",\n    name: \"Binance Smart Chain\",\n    rpcUrl: \"https://bsc-dataseed.binance.org/\",\n    currency: {\n      name: \"BNB\",\n      symbol: \"BNB\",\n      decimals: 18\n    }\n  },\n  137: {\n    chainId: \"0x89\",\n    name: \"Polygon\",\n    rpcUrl: \"https://polygon-rpc.com/\",\n    currency: {\n      name: \"Matic Token\",\n      symbol: \"MATIC\",\n      decimals: 18\n    }\n  },\n  80001: {\n    chainId: \"0x13881\",\n    name: \"Polygon Mumbai\",\n    rpcUrl: \"https://polygon-mumbai.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY\",\n    currency: {\n      name: \"Matic Token\",\n      symbol: \"MATIC\",\n      decimals: 18\n    },\n    explorer: \"https://mumbai.polygonscan.com/\"\n  },\n  97: {\n    chainId: \"0x61\",\n    name: \"BSC Testnet\",\n    rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545/\",\n    currency: {\n      name: \"BNB\",\n      symbol: \"BNB\",\n      decimals: 18\n    }\n  }\n};\nconst switchNetwork = async hexChainId => {\n  try {\n    console.log(`🔄 Attempting to switch to chain: ${hexChainId}`);\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{\n        chainId: hexChainId\n      }]\n    });\n    console.log(`✅ Successfully switched to network ${hexChainId}`);\n  } catch (error) {\n    console.error(\"❌ Error switching network:\", error);\n    if (error.code === 4902) {\n      const networkDetails = Object.values(supportedNetworks).find(net => net.chainId === hexChainId);\n      if (!networkDetails) {\n        alert(\"Network not supported. Please add it manually in MetaMask.\");\n        return;\n      }\n      try {\n        console.log(`➕ Adding network: ${networkDetails.name}`);\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId: networkDetails.chainId,\n            chainName: networkDetails.name,\n            rpcUrls: [networkDetails.rpcUrl],\n            nativeCurrency: networkDetails.currency,\n            blockExplorerUrls: [networkDetails.explorer] || []\n          }]\n        });\n        console.log(`✅ Network ${networkDetails.name} added successfully!`);\n\n        // Small delay to ensure MetaMask processes the change before proceeding\n        await new Promise(resolve => setTimeout(resolve, 1500));\n      } catch (addError) {\n        console.error(\"❌ Failed to add network:\", addError);\n      }\n    }\n  }\n};\nconst NetworkSelector = ({\n  setSelectedNetwork\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Select Network:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select w-50 mx-auto\",\n      onChange: e => switchNetwork(e.target.value),\n      children: Object.entries(supportedNetworks).map(([id, net]) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: net.chainId,\n        children: net.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = NetworkSelector;\nexport default NetworkSelector;\nvar _c;\n$RefreshReg$(_c, \"NetworkSelector\");","map":{"version":3,"names":["React","NETWORK_CONFIG","jsxDEV","_jsxDEV","supportedNetworks","chainId","name","rpcUrl","currency","symbol","decimals","explorer","switchNetwork","hexChainId","console","log","window","ethereum","request","method","params","error","code","networkDetails","Object","values","find","net","alert","chainName","rpcUrls","nativeCurrency","blockExplorerUrls","Promise","resolve","setTimeout","addError","NetworkSelector","setSelectedNetwork","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","entries","map","id","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/NetworkSelector.js"],"sourcesContent":["import React from \"react\";\nimport { NETWORK_CONFIG } from \"../constants/abis\";\n\nconst supportedNetworks = {\n  1: { chainId: \"0x1\", name: \"Ethereum Mainnet\", rpcUrl: \"https://eth-mainnet.alchemyapi.io/v2/YOUR_ALCHEMY_API_KEY\", currency: { name: \"Ether\", symbol: \"ETH\", decimals: 18 } },\n  56: { chainId: \"0x38\", name: \"Binance Smart Chain\", rpcUrl: \"https://bsc-dataseed.binance.org/\", currency: { name: \"BNB\", symbol: \"BNB\", decimals: 18 } },\n  137: { chainId: \"0x89\", name: \"Polygon\", rpcUrl: \"https://polygon-rpc.com/\", currency: { name: \"Matic Token\", symbol: \"MATIC\", decimals: 18 } },\n  80001: { chainId: \"0x13881\", name: \"Polygon Mumbai\", rpcUrl: \"https://polygon-mumbai.g.alchemy.com/v2/YOUR_ALCHEMY_API_KEY\", currency: { name: \"Matic Token\", symbol: \"MATIC\", decimals: 18 }, explorer: \"https://mumbai.polygonscan.com/\" },\n  97: { chainId: \"0x61\", name: \"BSC Testnet\", rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545/\", currency: { name: \"BNB\", symbol: \"BNB\", decimals: 18 } },\n};\n\nconst switchNetwork = async (hexChainId) => {\n  try {\n    console.log(`🔄 Attempting to switch to chain: ${hexChainId}`);\n\n    await window.ethereum.request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: hexChainId }],\n    });\n\n    console.log(`✅ Successfully switched to network ${hexChainId}`);\n\n  } catch (error) {\n    console.error(\"❌ Error switching network:\", error);\n\n    if (error.code === 4902) {\n      const networkDetails = Object.values(supportedNetworks).find(net => net.chainId === hexChainId);\n\n      if (!networkDetails) {\n        alert(\"Network not supported. Please add it manually in MetaMask.\");\n        return;\n      }\n\n      try {\n        console.log(`➕ Adding network: ${networkDetails.name}`);\n        await window.ethereum.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId: networkDetails.chainId,\n            chainName: networkDetails.name,\n            rpcUrls: [networkDetails.rpcUrl],\n            nativeCurrency: networkDetails.currency,\n            blockExplorerUrls: [networkDetails.explorer] || [],\n          }],\n        });\n\n        console.log(`✅ Network ${networkDetails.name} added successfully!`);\n\n        // Small delay to ensure MetaMask processes the change before proceeding\n        await new Promise((resolve) => setTimeout(resolve, 1500));\n\n      } catch (addError) {\n        console.error(\"❌ Failed to add network:\", addError);\n      }\n    }\n  }\n};\n\nconst NetworkSelector = ({ setSelectedNetwork }) => {\n  return (\n    <div className=\"text-center mt-4\">\n      <h5>Select Network:</h5>\n      <select\n        className=\"form-select w-50 mx-auto\"\n        onChange={(e) => switchNetwork(e.target.value)}\n      >\n        {Object.entries(supportedNetworks).map(([id, net]) => (\n          <option key={id} value={net.chainId}>\n            {net.name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default NetworkSelector;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}