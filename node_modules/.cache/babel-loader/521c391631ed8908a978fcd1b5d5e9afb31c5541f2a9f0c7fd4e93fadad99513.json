{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { BrowserProvider } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"✅ WalletConnect.js file has loaded\"); // CONFIRM FILE IS LOADED\n\nconst WalletConnect = () => {\n  _s();\n  console.log(\"✅ WalletConnect component is rendering\"); // CONFIRM COMPONENT RENDER\n\n  const [walletAddress, setWalletAddress] = useState(null);\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is required.\");\n      return;\n    }\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWalletAddress(accounts[0]);\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    colorScheme: \"teal\",\n    onClick: connectWallet,\n    children: walletAddress ? `Connected: ${walletAddress.slice(0, 6)}...${walletAddress.slice(-4)}` : \"Connect Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"gink3R2wQZ2Qgh5fc9oQ+ykQXc4=\");\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useState","Button","BrowserProvider","jsxDEV","_jsxDEV","console","log","WalletConnect","_s","walletAddress","setWalletAddress","connectWallet","window","ethereum","alert","provider","accounts","send","error","colorScheme","onClick","children","slice","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/WalletConnect.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { BrowserProvider } from \"ethers\";\n\nconsole.log(\"✅ WalletConnect.js file has loaded\"); // CONFIRM FILE IS LOADED\n\nconst WalletConnect = () => {\n  console.log(\"✅ WalletConnect component is rendering\"); // CONFIRM COMPONENT RENDER\n\n  const [walletAddress, setWalletAddress] = useState(null);\n\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is required.\");\n      return;\n    }\n\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWalletAddress(accounts[0]);\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n\n  return (\n    <Button colorScheme=\"teal\" onClick={connectWallet}>\n      {walletAddress\n        ? `Connected: ${walletAddress.slice(0, 6)}...${walletAddress.slice(-4)}`\n        : \"Connect Wallet\"}\n    </Button>\n  );\n};\n\nexport default WalletConnect;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CAAC,CAAC;;AAEnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CAAC,CAAC;;EAEvD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpBC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIb,eAAe,CAACU,MAAM,CAACC,QAAQ,CAAC;MACrD,MAAMG,QAAQ,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/DP,gBAAgB,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC7BX,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEU,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdb,OAAO,CAACa,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEd,OAAA,CAACH,MAAM;IAACkB,WAAW,EAAC,MAAM;IAACC,OAAO,EAAET,aAAc;IAAAU,QAAA,EAC/CZ,aAAa,GACV,cAAcA,aAAa,CAACa,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,MAAMb,aAAa,CAACa,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GACtE;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEb,CAAC;AAAClB,EAAA,CA5BID,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}