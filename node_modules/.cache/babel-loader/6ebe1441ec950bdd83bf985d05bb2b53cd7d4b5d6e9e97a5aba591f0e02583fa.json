{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/NetworkSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserProvider } from \"ethers\";\nimport { NETWORK_CONFIG } from \"../constants/abis\"; // ✅ Import network details\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkSelector = ({\n  setSelectedNetwork\n}) => {\n  _s();\n  var _NETWORK_CONFIG$curre;\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n  useEffect(() => {\n    const detectNetwork = async () => {\n      if (window.ethereum) {\n        const provider = new BrowserProvider(window.ethereum);\n        const network = await provider.getNetwork();\n        setCurrentNetwork(network.chainId);\n        setSelectedNetwork(network.chainId);\n      }\n    };\n    detectNetwork();\n    window.ethereum.on(\"chainChanged\", () => {\n      window.location.reload(); // Refresh on network change\n    });\n  }, [setSelectedNetwork]);\n  const switchNetwork = async chainId => {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId\n        }]\n      });\n    } catch (error) {\n      if (error.code === 4902) {\n        alert(\"Network not added to MetaMask! Please add it manually.\");\n      } else {\n        console.error(\"Error switching network:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Select Network:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-select w-50 mx-auto\",\n      onChange: e => switchNetwork(e.target.value),\n      children: Object.entries(NETWORK_CONFIG).map(([id, net]) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: net.chainId,\n        children: net.name\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"fw-bold mt-2\",\n      children: [\"Current Network: \", ((_NETWORK_CONFIG$curre = NETWORK_CONFIG[currentNetwork]) === null || _NETWORK_CONFIG$curre === void 0 ? void 0 : _NETWORK_CONFIG$curre.name) || \"Unknown\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(NetworkSelector, \"+q5iDQWhMN8NmFofZRn8ZHuDQPI=\");\n_c = NetworkSelector;\nexport default NetworkSelector;\nvar _c;\n$RefreshReg$(_c, \"NetworkSelector\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","NETWORK_CONFIG","jsxDEV","_jsxDEV","NetworkSelector","setSelectedNetwork","_s","_NETWORK_CONFIG$curre","currentNetwork","setCurrentNetwork","detectNetwork","window","ethereum","provider","network","getNetwork","chainId","on","location","reload","switchNetwork","request","method","params","error","code","alert","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","Object","entries","map","id","net","name","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/NetworkSelector.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserProvider } from \"ethers\";\nimport { NETWORK_CONFIG } from \"../constants/abis\"; // ✅ Import network details\n\nconst NetworkSelector = ({ setSelectedNetwork }) => {\n  const [currentNetwork, setCurrentNetwork] = useState(null);\n\n  useEffect(() => {\n    const detectNetwork = async () => {\n      if (window.ethereum) {\n        const provider = new BrowserProvider(window.ethereum);\n        const network = await provider.getNetwork();\n        setCurrentNetwork(network.chainId);\n        setSelectedNetwork(network.chainId);\n      }\n    };\n\n    detectNetwork();\n\n    window.ethereum.on(\"chainChanged\", () => {\n      window.location.reload(); // Refresh on network change\n    });\n  }, [setSelectedNetwork]);\n\n  const switchNetwork = async (chainId) => {\n    try {\n      await window.ethereum.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId }],\n      });\n    } catch (error) {\n      if (error.code === 4902) {\n        alert(\"Network not added to MetaMask! Please add it manually.\");\n      } else {\n        console.error(\"Error switching network:\", error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"text-center mt-4\">\n      <h5>Select Network:</h5>\n      <select\n        className=\"form-select w-50 mx-auto\"\n        onChange={(e) => switchNetwork(e.target.value)}\n      >\n        {Object.entries(NETWORK_CONFIG).map(([id, net]) => (\n          <option key={id} value={net.chainId}>\n            {net.name}\n          </option>\n        ))}\n      </select>\n      <p className=\"fw-bold mt-2\">\n        Current Network: {NETWORK_CONFIG[currentNetwork]?.name || \"Unknown\"}\n      </p>\n    </div>\n  );\n};\n\nexport default NetworkSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}