{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/TokenAllowanceManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserProvider, Contract, parseUnits, formatUnits } from \"ethers\";\nimport { CONTRACT_ADDRESSES, TOKEN_ALLOWANCE_MANAGER_ABI } from \"../constants/abis\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TokenAllowanceManager = () => {\n  _s();\n  const [wallet, setWallet] = useState(\"\");\n  const [spender, setSpender] = useState(\"\");\n  const [allowance, setAllowance] = useState(null);\n  const [selectedToken, setSelectedToken] = useState(CONTRACT_ADDRESSES.TK1);\n  const [error, setError] = useState(\"\"); // New state for errors\n\n  let provider = null; // Store provider globally\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert(\"Install MetaMask\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWallet(accounts[0]);\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const checkAllowance = async () => {\n    try {\n      if (!wallet || !selectedToken || !spender) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, provider);\n      const value = await contract.getAllowance(selectedToken, wallet, spender);\n      setAllowance(formatUnits(value, 18));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const setAllowanceAmount = async () => {\n    try {\n      if (!wallet || !spender || !selectedToken) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner(wallet); // ✅ Fix: Pass wallet address\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, signer);\n      const tx = await contract.setAllowance(selectedToken, spender, parseUnits(\"100\", 18));\n      await tx.wait();\n      alert(\"Allowance set to 100.\");\n      checkAllowance();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const revokeAllowance = async () => {\n    try {\n      if (!wallet || !spender || !selectedToken) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner(wallet); // ✅ Fix: Pass wallet address\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, signer);\n      const tx = await contract.revokeAllowance(selectedToken, spender);\n      await tx.wait();\n      alert(\"Allowance revoked.\");\n      checkAllowance();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !wallet ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setSelectedToken(e.target.value);\n          console.log(\"Selected token:\", e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: CONTRACT_ADDRESSES.TK1,\n          children: \"Test Token 1 (TK1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: CONTRACT_ADDRESSES.TK2,\n          children: \"Test Token 2 (TK2)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Spender Address\",\n        onChange: e => setSpender(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAllowance,\n        children: \"Check Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Allowance: \", allowance || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setAllowanceAmount,\n        children: \"Set Allowance (100 Tokens)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: revokeAllowance,\n        children: \"Revoke Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenAllowanceManager, \"1e9cptQKTgOxhR8z2QvJC1dfm2Q=\");\n_c = TokenAllowanceManager;\nexport default TokenAllowanceManager;\nvar _c;\n$RefreshReg$(_c, \"TokenAllowanceManager\");","map":{"version":3,"names":["React","useState","BrowserProvider","Contract","parseUnits","formatUnits","CONTRACT_ADDRESSES","TOKEN_ALLOWANCE_MANAGER_ABI","jsxDEV","_jsxDEV","Fragment","_Fragment","TokenAllowanceManager","_s","wallet","setWallet","spender","setSpender","allowance","setAllowance","selectedToken","setSelectedToken","TK1","error","setError","provider","connectWallet","window","ethereum","alert","accounts","send","console","log","err","message","checkAllowance","contract","TOKEN_ALLOWANCE_MANAGER","value","getAllowance","setAllowanceAmount","signer","getSigner","tx","wait","revokeAllowance","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","TK2","type","placeholder","style","color","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/TokenAllowanceManager.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserProvider, Contract, parseUnits, formatUnits } from \"ethers\";\nimport { CONTRACT_ADDRESSES, TOKEN_ALLOWANCE_MANAGER_ABI } from \"../constants/abis\";\n\nconst TokenAllowanceManager = () => {\n  const [wallet, setWallet] = useState(\"\");\n  const [spender, setSpender] = useState(\"\");\n  const [allowance, setAllowance] = useState(null);\n  const [selectedToken, setSelectedToken] = useState(CONTRACT_ADDRESSES.TK1);\n  const [error, setError] = useState(\"\"); // New state for errors\n\n  let provider = null; // Store provider globally\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert(\"Install MetaMask\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWallet(accounts[0]);\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const checkAllowance = async () => {\n    try {\n      if (!wallet || !selectedToken || !spender) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, provider);\n      const value = await contract.getAllowance(selectedToken, wallet, spender);\n      setAllowance(formatUnits(value, 18));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const setAllowanceAmount = async () => {\n    try {\n      if (!wallet || !spender || !selectedToken) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner(wallet); // ✅ Fix: Pass wallet address\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, signer);\n      const tx = await contract.setAllowance(selectedToken, spender, parseUnits(\"100\", 18));\n      await tx.wait();\n      alert(\"Allowance set to 100.\");\n      checkAllowance();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const revokeAllowance = async () => {\n    try {\n      if (!wallet || !spender || !selectedToken) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner(wallet); // ✅ Fix: Pass wallet address\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, signer);\n      const tx = await contract.revokeAllowance(selectedToken, spender);\n      await tx.wait();\n      alert(\"Allowance revoked.\");\n      checkAllowance();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {!wallet ? (\n        <button onClick={connectWallet}>Connect Wallet</button>\n      ) : (\n        <>\n          <select\n            onChange={(e) => {\n              setSelectedToken(e.target.value);\n              console.log(\"Selected token:\", e.target.value);\n            }}\n          >\n            <option value={CONTRACT_ADDRESSES.TK1}>Test Token 1 (TK1)</option>\n            <option value={CONTRACT_ADDRESSES.TK2}>Test Token 2 (TK2)</option>\n          </select>\n\n          <input type=\"text\" placeholder=\"Spender Address\" onChange={(e) => setSpender(e.target.value)} />\n          <button onClick={checkAllowance}>Check Allowance</button>\n          <p>Allowance: {allowance || \"N/A\"}</p>\n          <button onClick={setAllowanceAmount}>Set Allowance (100 Tokens)</button>\n          <button onClick={revokeAllowance}>Revoke Allowance</button>\n\n          {error && <p style={{ color: \"red\" }}>❌ {error}</p>}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default TokenAllowanceManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}