{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/WalletConnect.js\";\nimport React, { useEffect } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"✅ WalletConnect.js file has loaded\");\nconst WalletConnect = ({\n  setWallet\n}) => {\n  // ✅ Receive setWallet from App.js\n  console.log(\"✅ WalletConnect component is rendering\");\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is required.\");\n      return;\n    }\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWallet(accounts[0]); // ✅ Set wallet globally in App.js\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    colorScheme: \"teal\",\n    onClick: connectWallet,\n    children: \"Connect Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","useEffect","Button","ethers","jsxDEV","_jsxDEV","console","log","WalletConnect","setWallet","connectWallet","window","ethereum","alert","provider","BrowserProvider","accounts","send","error","colorScheme","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/WalletConnect.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ethers  } from \"ethers\";\n\nconsole.log(\"✅ WalletConnect.js file has loaded\");\n\nconst WalletConnect = ({ setWallet }) => {  // ✅ Receive setWallet from App.js\n  console.log(\"✅ WalletConnect component is rendering\");\n\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"MetaMask is required.\");\n      return;\n    }\n\n    try {\n      const provider = new BrowserProvider(window.ethereum);\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setWallet(accounts[0]);  // ✅ Set wallet globally in App.js\n      console.log(\"✅ Wallet connected:\", accounts[0]);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n\n  return (\n    <Button colorScheme=\"teal\" onClick={connectWallet}>\n      Connect Wallet\n    </Button>\n  );\n};\n\nexport default WalletConnect;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,MAAM,QAAS,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAEjD,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAG;EAC1CH,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EAErD,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpBC,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,eAAe,CAACJ,MAAM,CAACC,QAAQ,CAAC;MACrD,MAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC/DR,SAAS,CAACO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;MACzBV,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAES,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdZ,OAAO,CAACY,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEb,OAAA,CAACH,MAAM;IAACiB,WAAW,EAAC,MAAM;IAACC,OAAO,EAAEV,aAAc;IAAAW,QAAA,EAAC;EAEnD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GAxBIlB,aAAa;AA0BnB,eAAeA,aAAa;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}