{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  // Fetch account from Redux store\n  const account = useSelector(state => state.web3.account); // Correct the selector\n  const provider = window.ethereum ? new ethers.providers.Web3Provider(window.ethereum) : null; // Optional: Create a provider locally if not stored in Redux\n  const [approvals, setApprovals] = useState([]);\n\n  // Defensive checks\n  if (!account) {\n    console.error(\"❌ Wallet address is missing in Redux state!\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Wallet not connected.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n  if (!provider) {\n    console.error(\"❌ Provider is missing!\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: No provider available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  const fetchApprovals = async () => {\n    try {\n      console.log(\"✅ Wallet Address:\", account);\n      const tokenContracts = [\"0xTokenAddress1\",\n      // Replace with real addresses\n      \"0xTokenAddress2\"];\n      const approvals = await getERC20Approvals(tokenContracts, account, provider);\n      setApprovals(approvals);\n    } catch (error) {\n      console.error(\"❌ Error fetching approvals:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchApprovals();\n  }, [account]); // Fetch approvals when the account changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), approvals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [approval.contract, \" - Spender: \", approval.spender, \" - Amount: \", approval.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(ExistingApprovals, \"aZ1moIYOqddGxct+KUNVkB/Qbqk=\", false, function () {\n  return [useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","getERC20Approvals","jsxDEV","_jsxDEV","ExistingApprovals","_s","account","state","web3","provider","window","ethereum","providers","Web3Provider","approvals","setApprovals","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","fetchApprovals","log","tokenContracts","length","map","approval","index","contract","spender","amount","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\n\nconst ExistingApprovals = () => {\n    // Fetch account from Redux store\n    const account = useSelector((state) => state.web3.account); // Correct the selector\n    const provider = window.ethereum ? new ethers.providers.Web3Provider(window.ethereum) : null; // Optional: Create a provider locally if not stored in Redux\n    const [approvals, setApprovals] = useState([]);\n\n    // Defensive checks\n    if (!account) {\n        console.error(\"❌ Wallet address is missing in Redux state!\");\n        return <div>Error: Wallet not connected.</div>;\n    }\n\n    if (!provider) {\n        console.error(\"❌ Provider is missing!\");\n        return <div>Error: No provider available.</div>;\n    }\n\n    const fetchApprovals = async () => {\n        try {\n            console.log(\"✅ Wallet Address:\", account);\n\n            const tokenContracts = [\n                \"0xTokenAddress1\", // Replace with real addresses\n                \"0xTokenAddress2\"\n            ];\n\n            const approvals = await getERC20Approvals(tokenContracts, account, provider);\n            setApprovals(approvals);\n        } catch (error) {\n            console.error(\"❌ Error fetching approvals:\", error);\n        }\n    };\n\n    useEffect(() => {\n        fetchApprovals();\n    }, [account]); // Fetch approvals when the account changes\n\n    return (\n        <div>\n            <h2>Existing Approvals</h2>\n            {approvals.length === 0 ? (\n                <p>No approvals found.</p>\n            ) : (\n                <ul>\n                    {approvals.map((approval, index) => (\n                        <li key={index}>\n                            {approval.contract} - Spender: {approval.spender} - Amount: {approval.amount}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ExistingApprovals;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}