{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { CONTRACT_ADDRESSES, addApproval, removeApproval } from \"../constants/abis\"; // Import your actions\nimport { addApproval as addApprovalAction, removeApproval as removeApprovalAction } from \"../store/web3Slice\"; // Ensure correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  const dispatch = useDispatch();\n  const account = useSelector(state => state.web3.account);\n  const provider = window.ethereum ? new ethers.providers.Web3Provider(window.ethereum) : new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\"); // ✅ Ensure localhost provider\n\n  const approvals = useSelector(state => state.web3.approvals); // Access current approvals\n  const [fetchedApprovals, setFetchedApprovals] = useState([]);\n  useEffect(() => {\n    if (approvals.length === 0) {\n      // Only fetch if no approvals in store\n      fetchApprovals();\n    }\n  }, [account]);\n  const fetchApprovals = async () => {\n    try {\n      const tokenContracts = [CONTRACT_ADDRESSES.TK1, CONTRACT_ADDRESSES.TK2];\n      const fetched = await getERC20Approvals(tokenContracts, account, provider);\n      fetched.forEach(approval => {\n        // Dispatch add approval for each fetched approval\n        dispatch(addApprovalAction(approval));\n      });\n      setFetchedApprovals(fetched);\n    } catch (error) {\n      console.error(\"❌ Error fetching approvals:\", error);\n    }\n  };\n  const revokeApproval = async token => {\n    // Implement logic to revoke approval using the token address\n    // Once revoked, dispatch removeApproval\n    dispatch(removeApprovalAction({\n      token\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Existing Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), fetchedApprovals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: fetchedApprovals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [approval.contract, \" - Spender: \", approval.spender, \" - Amount: \", approval.amount, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => revokeApproval(approval.token),\n          children: \"Revoke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ExistingApprovals, \"g6FeKgXNl+lx767R1ixPU4CEp74=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","useDispatch","getERC20Approvals","CONTRACT_ADDRESSES","addApproval","removeApproval","addApprovalAction","removeApprovalAction","jsxDEV","_jsxDEV","ExistingApprovals","_s","dispatch","account","state","web3","provider","window","ethereum","providers","Web3Provider","JsonRpcProvider","approvals","fetchedApprovals","setFetchedApprovals","length","fetchApprovals","tokenContracts","TK1","TK2","fetched","forEach","approval","error","console","revokeApproval","token","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","contract","spender","amount","onClick","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { CONTRACT_ADDRESSES, addApproval, removeApproval } from \"../constants/abis\"; // Import your actions\nimport { addApproval as addApprovalAction, removeApproval as removeApprovalAction } from \"../store/web3Slice\"; // Ensure correct import\n\nconst ExistingApprovals = () => {\n    const dispatch = useDispatch();\n    const account = useSelector((state) => state.web3.account);\n    const provider = window.ethereum\n    ? new ethers.providers.Web3Provider(window.ethereum)\n    : new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\"); // ✅ Ensure localhost provider\n\n    const approvals = useSelector((state) => state.web3.approvals); // Access current approvals\n    const [fetchedApprovals, setFetchedApprovals] = useState([]);\n\n    useEffect(() => {\n        if (approvals.length === 0) { // Only fetch if no approvals in store\n            fetchApprovals();\n        }\n    }, [account]);\n\n    const fetchApprovals = async () => {\n        try {\n            const tokenContracts = [\n                CONTRACT_ADDRESSES.TK1,\n                CONTRACT_ADDRESSES.TK2,\n            ];\n\n            const fetched = await getERC20Approvals(tokenContracts, account, provider);\n\n            fetched.forEach((approval) => {\n                // Dispatch add approval for each fetched approval\n                dispatch(addApprovalAction(approval));\n            });\n\n            setFetchedApprovals(fetched);\n        } catch (error) {\n            console.error(\"❌ Error fetching approvals:\", error);\n        }\n    };\n\n    const revokeApproval = async (token) => {\n        // Implement logic to revoke approval using the token address\n        // Once revoked, dispatch removeApproval\n        dispatch(removeApprovalAction({ token }));\n    };\n\n    return (\n        <div>\n            <h2>Existing Approvals</h2>\n            {fetchedApprovals.length === 0 ? (\n                <p>No approvals found.</p>\n            ) : (\n                <ul>\n                    {fetchedApprovals.map((approval, index) => (\n                        <li key={index}>\n                            {approval.contract} - Spender: {approval.spender} - Amount: {approval.amount}\n                            <button onClick={() => revokeApproval(approval.token)}>Revoke</button> {/* Add revoke button */}\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ExistingApprovals;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}