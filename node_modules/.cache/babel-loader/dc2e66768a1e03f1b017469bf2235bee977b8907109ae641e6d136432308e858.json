{"ast":null,"code":"import { ethers } from \"ethers\";\nconst getProvider = () => {\n  if (window.ethereum) {\n    return new ethers.providers.Web3Provider(window.ethereum);\n  }\n\n  // Use Infura if no local Hardhat node is running\n  const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;\n  const infuraUrl = `https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`;\n  try {\n    return new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\"); // Hardhat local network\n  } catch (error) {\n    console.warn(\"⚠️ Hardhat node not found, using Infura...\");\n    return new ethers.providers.JsonRpcProvider(infuraUrl);\n  }\n};\nexport default getProvider;","map":{"version":3,"names":["ethers","getProvider","window","ethereum","providers","Web3Provider","INFURA_PROJECT_ID","process","env","infuraUrl","JsonRpcProvider","error","console","warn"],"sources":["/Users/markemery/mini.revoke/src/utils/provider.js"],"sourcesContent":["import { ethers } from \"ethers\";\n\nconst getProvider = () => {\n    if (window.ethereum) {\n        return new ethers.providers.Web3Provider(window.ethereum);\n    }\n\n    // Use Infura if no local Hardhat node is running\n    const INFURA_PROJECT_ID = process.env.INFURA_PROJECT_ID;\n    const infuraUrl = `https://mainnet.infura.io/v3/${INFURA_PROJECT_ID}`;\n\n    try {\n        return new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\"); // Hardhat local network\n    } catch (error) {\n        console.warn(\"⚠️ Hardhat node not found, using Infura...\");\n        return new ethers.providers.JsonRpcProvider(infuraUrl);\n    }\n};\n\nexport default getProvider;\n\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAE/B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,IAAIC,MAAM,CAACC,QAAQ,EAAE;IACjB,OAAO,IAAIH,MAAM,CAACI,SAAS,CAACC,YAAY,CAACH,MAAM,CAACC,QAAQ,CAAC;EAC7D;;EAEA;EACA,MAAMG,iBAAiB,GAAGC,OAAO,CAACC,GAAG,CAACF,iBAAiB;EACvD,MAAMG,SAAS,GAAG,gCAAgCH,iBAAiB,EAAE;EAErE,IAAI;IACA,OAAO,IAAIN,MAAM,CAACI,SAAS,CAACM,eAAe,CAAC,uBAAuB,CAAC,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,IAAI,CAAC,4CAA4C,CAAC;IAC1D,OAAO,IAAIb,MAAM,CAACI,SAAS,CAACM,eAAe,CAACD,SAAS,CAAC;EAC1D;AACJ,CAAC;AAED,eAAeR,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}