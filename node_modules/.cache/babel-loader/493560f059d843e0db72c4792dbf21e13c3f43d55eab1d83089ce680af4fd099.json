{"ast":null,"code":"import { ethers } from \"ethers\";\n\n/** Function to batch revoke ERC-20 approvals */\nexport async function batchRevokeERC20Approvals(tokenContracts, signer) {\n  const abi = [\"function approve(address spender, uint256 amount)\"];\n  console.log(\"⏳ Revoking multiple ERC-20 approvals...\");\n  for (let tokenAddress of tokenContracts) {\n    if (!ethers.utils.isAddress(tokenAddress)) {\n      console.error(`❌ Invalid token address for revoking: ${tokenAddress}`);\n      continue;\n    }\n    try {\n      const contract = new ethers.Contract(tokenAddress, abi, signer);\n      const tx = await contract.approve(\"0x0000000000000000000000000000000000000000\", 0);\n      await tx.wait();\n      console.log(`✅ Revoked approval for ${tokenAddress}`);\n    } catch (error) {\n      console.error(`❌ Error revoking approval for ${tokenAddress}:`, error);\n    }\n  }\n}","map":{"version":3,"names":["ethers","batchRevokeERC20Approvals","tokenContracts","signer","abi","console","log","tokenAddress","utils","isAddress","error","contract","Contract","tx","approve","wait"],"sources":["/Users/markemery/mini.revoke/src/components/BatchRevoke.js"],"sourcesContent":["import { ethers } from \"ethers\";\n\n/** Function to batch revoke ERC-20 approvals */\nexport async function batchRevokeERC20Approvals(tokenContracts, signer) {\n    const abi = [\"function approve(address spender, uint256 amount)\"];\n\n    console.log(\"⏳ Revoking multiple ERC-20 approvals...\");\n\n    for (let tokenAddress of tokenContracts) {\n        if (!ethers.utils.isAddress(tokenAddress)) {\n            console.error(`❌ Invalid token address for revoking: ${tokenAddress}`);\n            continue;\n        }\n\n        try {\n            const contract = new ethers.Contract(tokenAddress, abi, signer);\n            const tx = await contract.approve(\"0x0000000000000000000000000000000000000000\", 0);\n            await tx.wait();\n            console.log(`✅ Revoked approval for ${tokenAddress}`);\n        } catch (error) {\n            console.error(`❌ Error revoking approval for ${tokenAddress}:`, error);\n        }\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAO,eAAeC,yBAAyBA,CAACC,cAAc,EAAEC,MAAM,EAAE;EACpE,MAAMC,GAAG,GAAG,CAAC,mDAAmD,CAAC;EAEjEC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;EAEtD,KAAK,IAAIC,YAAY,IAAIL,cAAc,EAAE;IACrC,IAAI,CAACF,MAAM,CAACQ,KAAK,CAACC,SAAS,CAACF,YAAY,CAAC,EAAE;MACvCF,OAAO,CAACK,KAAK,CAAC,yCAAyCH,YAAY,EAAE,CAAC;MACtE;IACJ;IAEA,IAAI;MACA,MAAMI,QAAQ,GAAG,IAAIX,MAAM,CAACY,QAAQ,CAACL,YAAY,EAAEH,GAAG,EAAED,MAAM,CAAC;MAC/D,MAAMU,EAAE,GAAG,MAAMF,QAAQ,CAACG,OAAO,CAAC,4CAA4C,EAAE,CAAC,CAAC;MAClF,MAAMD,EAAE,CAACE,IAAI,CAAC,CAAC;MACfV,OAAO,CAACC,GAAG,CAAC,0BAA0BC,YAAY,EAAE,CAAC;IACzD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,iCAAiCH,YAAY,GAAG,EAAEG,KAAK,CAAC;IAC1E;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}