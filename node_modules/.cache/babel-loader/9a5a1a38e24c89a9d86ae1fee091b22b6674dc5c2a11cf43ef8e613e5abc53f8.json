{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/ExistingApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExistingApprovals = () => {\n  _s();\n  const wallet = useSelector(state => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n  const fetchApprovals = async () => {\n    try {\n      console.log(\"üîç Fetching ERC-20 approvals...\");\n\n      // üöÄ Explicitly force Hardhat network without ENS\n      const customProvider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n        name: \"hardhat\",\n        chainId: 1337 // ‚úÖ Confirmed chain ID\n      });\n\n      // üöÄ Completely disable ENS resolution\n      customProvider.getResolver = async (...args) => {\n        console.error(\"üö® ENS resolution was attempted!\", args);\n        throw new Error(\"ENS resolution is disabled on this network.\");\n      };\n      const signer = customProvider.getSigner();\n      const walletAddress = await signer.getAddress();\n      console.log(\"‚úÖ Wallet Address from Redux:\", wallet);\n      console.log(\"‚úÖ Resolved Signer Address:\", walletAddress);\n      console.log(\"‚úÖ Provider:\", customProvider);\n      const network = await customProvider.getNetwork();\n      console.log(\"‚úÖ Connected to Network:\", network);\n      const address = ethers.utils.getAddress(walletAddress);\n      console.log(\"‚úÖ Checksum Wallet Address:\", address);\n      const signerAddress = await signer.getAddress();\n      console.log(\"üö® Debug: Parameters being passed:\");\n      console.log(\"walletAddress:\", walletAddress);\n      console.log(\"signerAddress:\", signerAddress);\n      console.log(\"provider:\", customProvider);\n\n      // üöÄ Validate that signerAddress and walletAddress are actual addresses, not ENS names\n      if (!ethers.utils.isAddress(walletAddress) || !ethers.utils.isAddress(signerAddress)) {\n        throw new Error(`‚ùå Invalid Ethereum address detected! walletAddress: ${walletAddress}, signerAddress: ${signerAddress}`);\n      }\n      console.log(\"‚úÖ Addresses are valid. Fetching approvals...\");\n\n      // üöÄ Log every argument being passed to `getERC20Approvals()`\n      console.log(\"üßê Debugging getERC20Approvals Input:\");\n      console.log(\"walletAddress:\", walletAddress);\n      console.log(\"signerAddress:\", signerAddress);\n      console.log(\"provider:\", customProvider);\n\n      // üöÄ Store result in a variable to check errors before setting state\n      const erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, customProvider).then(result => {\n        console.log(\"‚úÖ ERC-20 Approvals:\", result);\n        setApprovals(result);\n      }).catch(error => {\n        console.error(\"‚ùå Error inside getERC20Approvals:\", error);\n      });\n    } catch (error) {\n      console.error(\"‚ùå Error fetching approvals:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Existing ERC-20 Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), approvals.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: approvals.map((approval, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Spender:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), \" \", approval.spender, \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 62\n        }, this), \" \", approval.amount]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No approvals found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ExistingApprovals, \"eZwHlsgbKx1sS/BVIfH8xojLmSc=\", false, function () {\n  return [useSelector];\n});\n_c = ExistingApprovals;\nexport default ExistingApprovals;\nvar _c;\n$RefreshReg$(_c, \"ExistingApprovals\");","map":{"version":3,"names":["React","useState","useEffect","ethers","useSelector","getERC20Approvals","jsxDEV","_jsxDEV","ExistingApprovals","_s","wallet","state","web3","account","approvals","setApprovals","window","ethereum","fetchApprovals","console","log","customProvider","providers","JsonRpcProvider","name","chainId","getResolver","args","error","Error","signer","getSigner","walletAddress","getAddress","network","getNetwork","address","utils","signerAddress","isAddress","erc20Approvals","then","result","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","approval","index","spender","amount","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/ExistingApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport { useSelector } from \"react-redux\";\nimport { getERC20Approvals } from \"../utils/erc20Approvals\";\n\nconst ExistingApprovals = () => {\n  const wallet = useSelector((state) => state.web3.account);\n  const [approvals, setApprovals] = useState([]);\n\n  useEffect(() => {\n    if (wallet && window.ethereum) {\n      fetchApprovals();\n    }\n  }, [wallet]);\n\nconst fetchApprovals = async () => {\n  try {\n    console.log(\"üîç Fetching ERC-20 approvals...\");\n\n    // üöÄ Explicitly force Hardhat network without ENS\n    const customProvider = new ethers.providers.JsonRpcProvider(\"http://127.0.0.1:8545\", {\n      name: \"hardhat\",\n      chainId: 1337, // ‚úÖ Confirmed chain ID\n    });\n\n    // üöÄ Completely disable ENS resolution\n    customProvider.getResolver = async (...args) => {\n      console.error(\"üö® ENS resolution was attempted!\", args);\n      throw new Error(\"ENS resolution is disabled on this network.\");\n    };\n\n    const signer = customProvider.getSigner();\n    const walletAddress = await signer.getAddress();\n\n    console.log(\"‚úÖ Wallet Address from Redux:\", wallet);\n    console.log(\"‚úÖ Resolved Signer Address:\", walletAddress);\n    console.log(\"‚úÖ Provider:\", customProvider);\n\n    const network = await customProvider.getNetwork();\n    console.log(\"‚úÖ Connected to Network:\", network);\n\n    const address = ethers.utils.getAddress(walletAddress);\n    console.log(\"‚úÖ Checksum Wallet Address:\", address);\n\n    const signerAddress = await signer.getAddress();\n    console.log(\"üö® Debug: Parameters being passed:\");\n    console.log(\"walletAddress:\", walletAddress);\n    console.log(\"signerAddress:\", signerAddress);\n    console.log(\"provider:\", customProvider);\n\n    // üöÄ Validate that signerAddress and walletAddress are actual addresses, not ENS names\n    if (!ethers.utils.isAddress(walletAddress) || !ethers.utils.isAddress(signerAddress)) {\n      throw new Error(`‚ùå Invalid Ethereum address detected! walletAddress: ${walletAddress}, signerAddress: ${signerAddress}`);\n    }\n\n    console.log(\"‚úÖ Addresses are valid. Fetching approvals...\");\n\n    // üöÄ Log every argument being passed to `getERC20Approvals()`\n    console.log(\"üßê Debugging getERC20Approvals Input:\");\n    console.log(\"walletAddress:\", walletAddress);\n    console.log(\"signerAddress:\", signerAddress);\n    console.log(\"provider:\", customProvider);\n\n    // üöÄ Store result in a variable to check errors before setting state\n    const erc20Approvals = await getERC20Approvals(walletAddress, signerAddress, customProvider)\n      .then((result) => {\n        console.log(\"‚úÖ ERC-20 Approvals:\", result);\n        setApprovals(result);\n      })\n      .catch((error) => {\n        console.error(\"‚ùå Error inside getERC20Approvals:\", error);\n      });\n\n  } catch (error) {\n    console.error(\"‚ùå Error fetching approvals:\", error);\n  }\n};\n\n\n\n\n\n\n\n  return (\n    <div>\n      <h3>Existing ERC-20 Approvals</h3>\n      {approvals.length > 0 ? (\n        <ul>\n          {approvals.map((approval, index) => (\n            <li key={index}>\n              <strong>Spender:</strong> {approval.spender} | <strong>Amount:</strong> {approval.amount}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No approvals found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ExistingApprovals;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,iBAAiB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,MAAM,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC;EACzD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIQ,MAAM,IAAIM,MAAM,CAACC,QAAQ,EAAE;MAC7BC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEd,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;;MAE9C;MACA,MAAMC,cAAc,GAAG,IAAIlB,MAAM,CAACmB,SAAS,CAACC,eAAe,CAAC,uBAAuB,EAAE;QACnFC,IAAI,EAAE,SAAS;QACfC,OAAO,EAAE,IAAI,CAAE;MACjB,CAAC,CAAC;;MAEF;MACAJ,cAAc,CAACK,WAAW,GAAG,OAAO,GAAGC,IAAI,KAAK;QAC9CR,OAAO,CAACS,KAAK,CAAC,kCAAkC,EAAED,IAAI,CAAC;QACvD,MAAM,IAAIE,KAAK,CAAC,6CAA6C,CAAC;MAChE,CAAC;MAED,MAAMC,MAAM,GAAGT,cAAc,CAACU,SAAS,CAAC,CAAC;MACzC,MAAMC,aAAa,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MAE/Cd,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEV,MAAM,CAAC;MACnDS,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEY,aAAa,CAAC;MACxDb,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,cAAc,CAAC;MAE1C,MAAMa,OAAO,GAAG,MAAMb,cAAc,CAACc,UAAU,CAAC,CAAC;MACjDhB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEc,OAAO,CAAC;MAE/C,MAAME,OAAO,GAAGjC,MAAM,CAACkC,KAAK,CAACJ,UAAU,CAACD,aAAa,CAAC;MACtDb,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEgB,OAAO,CAAC;MAElD,MAAME,aAAa,GAAG,MAAMR,MAAM,CAACG,UAAU,CAAC,CAAC;MAC/Cd,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;MACjDD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,aAAa,CAAC;MAC5Cb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkB,aAAa,CAAC;MAC5CnB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,cAAc,CAAC;;MAExC;MACA,IAAI,CAAClB,MAAM,CAACkC,KAAK,CAACE,SAAS,CAACP,aAAa,CAAC,IAAI,CAAC7B,MAAM,CAACkC,KAAK,CAACE,SAAS,CAACD,aAAa,CAAC,EAAE;QACpF,MAAM,IAAIT,KAAK,CAAC,uDAAuDG,aAAa,oBAAoBM,aAAa,EAAE,CAAC;MAC1H;MAEAnB,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;;MAE3D;MACAD,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDD,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,aAAa,CAAC;MAC5Cb,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEkB,aAAa,CAAC;MAC5CnB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,cAAc,CAAC;;MAExC;MACA,MAAMmB,cAAc,GAAG,MAAMnC,iBAAiB,CAAC2B,aAAa,EAAEM,aAAa,EAAEjB,cAAc,CAAC,CACzFoB,IAAI,CAAEC,MAAM,IAAK;QAChBvB,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEsB,MAAM,CAAC;QAC1C3B,YAAY,CAAC2B,MAAM,CAAC;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEf,KAAK,IAAK;QAChBT,OAAO,CAACS,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAQC,oBACErB,OAAA;IAAAqC,QAAA,gBACErC,OAAA;MAAAqC,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjClC,SAAS,CAACmC,MAAM,GAAG,CAAC,gBACnB1C,OAAA;MAAAqC,QAAA,EACG9B,SAAS,CAACoC,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7B7C,OAAA;QAAAqC,QAAA,gBACErC,OAAA;UAAAqC,QAAA,EAAQ;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,QAAQ,CAACE,OAAO,EAAC,KAAG,eAAA9C,OAAA;UAAAqC,QAAA,EAAQ;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACG,QAAQ,CAACG,MAAM;MAAA,GADjFF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELzC,OAAA;MAAAqC,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvC,EAAA,CA/FID,iBAAiB;EAAA,QACNJ,WAAW;AAAA;AAAAmD,EAAA,GADtB/C,iBAAiB;AAiGvB,eAAeA,iBAAiB;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}