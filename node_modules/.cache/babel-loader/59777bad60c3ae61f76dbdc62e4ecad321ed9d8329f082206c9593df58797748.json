{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport WalletConnect from \"./components/WalletConnect.js\";\nimport TokenAllowanceManager from \"./components/TokenAllowanceManager.js\";\nimport NFTApprovals from \"./components/NFTApprovals.js\"; // ✅ Import NFTApprovals\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"✅ App.js file has loaded\");\nconst App = () => {\n  _s();\n  console.log(\"✅ App component is rendering\");\n  const [wallet, setWallet] = useState(null); // ✅ Store wallet globally\n\n  // ✅ Replace this with the actual deployed NFT contract address\n  const nftContractAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\";\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"20px\"\n      },\n      children: \"MINI REVOKE CASH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(WalletConnect, {\n        setWallet: setWallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"40px\",\n        padding: \"20px\",\n        border: \"1px solid gray\",\n        borderRadius: \"10px\",\n        width: \"400px\",\n        margin: \"auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TokenAllowanceManager, {\n        wallet: wallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), wallet && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"40px\",\n        padding: \"20px\",\n        border: \"1px solid blue\",\n        borderRadius: \"10px\",\n        width: \"400px\",\n        margin: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"NFT Approvals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NFTApprovals, {\n        contractAddress: nftContractAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"FhIvDmY8S7WwubvQp5yG3mGUlyM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChakraProvider","WalletConnect","TokenAllowanceManager","NFTApprovals","jsxDEV","_jsxDEV","console","log","App","_s","wallet","setWallet","nftContractAddress","children","style","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","padding","border","borderRadius","width","margin","contractAddress","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport WalletConnect from \"./components/WalletConnect.js\";\nimport TokenAllowanceManager from \"./components/TokenAllowanceManager.js\";\nimport NFTApprovals from \"./components/NFTApprovals.js\"; // ✅ Import NFTApprovals\n\nconsole.log(\"✅ App.js file has loaded\");\n\nconst App = () => {\n  console.log(\"✅ App component is rendering\");\n\n  const [wallet, setWallet] = useState(null); // ✅ Store wallet globally\n\n  // ✅ Replace this with the actual deployed NFT contract address\n  const nftContractAddress = \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\"; \n\n  return (\n    <ChakraProvider>\n      <h1 style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n        MINI REVOKE CASH\n      </h1>\n\n      {/* Pass setWallet to WalletConnect */}\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}>\n        <WalletConnect setWallet={setWallet} />\n      </div>\n\n      {/* Pass wallet state to TokenAllowanceManager */}\n      <div style={{\n        marginTop: \"40px\",\n        padding: \"20px\",\n        border: \"1px solid gray\",\n        borderRadius: \"10px\",\n        width: \"400px\",\n        margin: \"auto\"\n      }}>\n        <TokenAllowanceManager wallet={wallet} />\n      </div>\n\n      {/* ✅ Show NFT approvals only if the wallet is connected */}\n      {wallet && (\n        <div style={{\n          marginTop: \"40px\",\n          padding: \"20px\",\n          border: \"1px solid blue\",\n          borderRadius: \"10px\",\n          width: \"400px\",\n          margin: \"auto\"\n        }}>\n          <h2 style={{ textAlign: \"center\" }}>NFT Approvals</h2>\n          <NFTApprovals contractAddress={nftContractAddress} />\n        </div>\n      )}\n    </ChakraProvider>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,YAAY,MAAM,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzDC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChBH,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAE3C,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMa,kBAAkB,GAAG,4CAA4C;EAEvE,oBACEP,OAAA,CAACL,cAAc;IAAAa,QAAA,gBACbR,OAAA;MAAIS,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAEvD;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGLf,OAAA;MAAKS,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,QAAQ;QAAEN,SAAS,EAAE;MAAO,CAAE;MAAAH,QAAA,eAC3ER,OAAA,CAACJ,aAAa;QAACU,SAAS,EAAEA;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGNf,OAAA;MAAKS,KAAK,EAAE;QACVE,SAAS,EAAE,MAAM;QACjBO,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,MAAM;QACpBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAE;MAAAd,QAAA,eACAR,OAAA,CAACH,qBAAqB;QAACQ,MAAM,EAAEA;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EAGLV,MAAM,iBACLL,OAAA;MAAKS,KAAK,EAAE;QACVE,SAAS,EAAE,MAAM;QACjBO,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,gBAAgB;QACxBC,YAAY,EAAE,MAAM;QACpBC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE;MACV,CAAE;MAAAd,QAAA,gBACAR,OAAA;QAAIS,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAF,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtDf,OAAA,CAACF,YAAY;QAACyB,eAAe,EAAEhB;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAErB,CAAC;AAACX,EAAA,CA/CID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}