{"ast":null,"code":"import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESSES } from \"../constants/abis\";\nimport { getProvider } from \"../utils/provider\";\nimport TestERC1155 from \"../constants/abis/TestERC1155.json\";\nasync function getERC1155Approvals(ownerAddress) {\n  try {\n    if (!ownerAddress) {\n      throw new Error(\"‚ùå Owner address is missing!\");\n    }\n    const provider = getProvider();\n    const erc1155 = new ethers.Contract(CONTRACT_ADDRESSES.ERC1155, TestERC1155.abi, provider);\n    console.log(\"üîç Checking ERC-1155 Approvals for:\", ownerAddress);\n    const approvalStatus = await erc1155.isApprovedForAll(ownerAddress, CONTRACT_ADDRESSES.SPENDER);\n    return [{\n      spender: CONTRACT_ADDRESSES.SPENDER,\n      approved: approvalStatus\n    }];\n  } catch (error) {\n    console.error(\"‚ùå Error in getERC1155Approvals:\", error.message);\n    throw error;\n  }\n}\n\n// Other exports (keeping existing ones intact)\nasync function revokeERC1155Approval(ownerAddress, spenderAddress) {\n  try {\n    if (!ownerAddress || !spenderAddress) {\n      throw new Error(\"‚ùå Owner or spender address is missing!\");\n    }\n    const provider = getProvider();\n    const signer = provider.getSigner();\n    const erc1155 = new ethers.Contract(CONTRACT_ADDRESSES.ERC1155, TestERC1155.abi, signer);\n    const tx = await erc1155.setApprovalForAll(spenderAddress, false);\n    await tx.wait();\n    console.log(\"‚úÖ Approval revoked for\", spenderAddress);\n    return true;\n  } catch (error) {\n    console.error(\"‚ùå Error revoking ERC-1155 approval:\", error.message);\n    throw error;\n  }\n}","map":{"version":3,"names":["ethers","CONTRACT_ADDRESSES","getProvider","TestERC1155","getERC1155Approvals","ownerAddress","Error","provider","erc1155","Contract","ERC1155","abi","console","log","approvalStatus","isApprovedForAll","SPENDER","spender","approved","error","message","revokeERC1155Approval","spenderAddress","signer","getSigner","tx","setApprovalForAll","wait"],"sources":["/Users/markemery/mini.revoke/src/utils/erc1155Approvals.js"],"sourcesContent":["import { ethers } from \"ethers\";\nimport { CONTRACT_ADDRESSES } from \"../constants/abis\";\nimport { getProvider } from \"../utils/provider\";\nimport TestERC1155 from \"../constants/abis/TestERC1155.json\";\n\nasync function getERC1155Approvals(ownerAddress) {\n    try {\n        if (!ownerAddress) {\n            throw new Error(\"‚ùå Owner address is missing!\");\n        }\n\n        const provider = getProvider();\n        const erc1155 = new ethers.Contract(\n            CONTRACT_ADDRESSES.ERC1155,\n            TestERC1155.abi,\n            provider\n        );\n\n        console.log(\"üîç Checking ERC-1155 Approvals for:\", ownerAddress);\n\n        const approvalStatus = await erc1155.isApprovedForAll(ownerAddress, CONTRACT_ADDRESSES.SPENDER);\n        return [{ spender: CONTRACT_ADDRESSES.SPENDER, approved: approvalStatus }];\n    } catch (error) {\n        console.error(\"‚ùå Error in getERC1155Approvals:\", error.message);\n        throw error;\n    }\n}\n\n// Other exports (keeping existing ones intact)\nasync function revokeERC1155Approval(ownerAddress, spenderAddress) {\n    try {\n        if (!ownerAddress || !spenderAddress) {\n            throw new Error(\"‚ùå Owner or spender address is missing!\");\n        }\n\n        const provider = getProvider();\n        const signer = provider.getSigner();\n        const erc1155 = new ethers.Contract(CONTRACT_ADDRESSES.ERC1155, TestERC1155.abi, signer);\n\n        const tx = await erc1155.setApprovalForAll(spenderAddress, false);\n        await tx.wait();\n\n        console.log(\"‚úÖ Approval revoked for\", spenderAddress);\n        return true;\n    } catch (error) {\n        console.error(\"‚ùå Error revoking ERC-1155 approval:\", error.message);\n        throw error;\n    }\n}\n\n\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,SAASC,kBAAkB,QAAQ,mBAAmB;AACtD,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,OAAOC,WAAW,MAAM,oCAAoC;AAE5D,eAAeC,mBAAmBA,CAACC,YAAY,EAAE;EAC7C,IAAI;IACA,IAAI,CAACA,YAAY,EAAE;MACf,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IAEA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;IAC9B,MAAMM,OAAO,GAAG,IAAIR,MAAM,CAACS,QAAQ,CAC/BR,kBAAkB,CAACS,OAAO,EAC1BP,WAAW,CAACQ,GAAG,EACfJ,QACJ,CAAC;IAEDK,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAER,YAAY,CAAC;IAEhE,MAAMS,cAAc,GAAG,MAAMN,OAAO,CAACO,gBAAgB,CAACV,YAAY,EAAEJ,kBAAkB,CAACe,OAAO,CAAC;IAC/F,OAAO,CAAC;MAAEC,OAAO,EAAEhB,kBAAkB,CAACe,OAAO;MAAEE,QAAQ,EAAEJ;IAAe,CAAC,CAAC;EAC9E,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;IAC/D,MAAMD,KAAK;EACf;AACJ;;AAEA;AACA,eAAeE,qBAAqBA,CAAChB,YAAY,EAAEiB,cAAc,EAAE;EAC/D,IAAI;IACA,IAAI,CAACjB,YAAY,IAAI,CAACiB,cAAc,EAAE;MAClC,MAAM,IAAIhB,KAAK,CAAC,wCAAwC,CAAC;IAC7D;IAEA,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;IAC9B,MAAMqB,MAAM,GAAGhB,QAAQ,CAACiB,SAAS,CAAC,CAAC;IACnC,MAAMhB,OAAO,GAAG,IAAIR,MAAM,CAACS,QAAQ,CAACR,kBAAkB,CAACS,OAAO,EAAEP,WAAW,CAACQ,GAAG,EAAEY,MAAM,CAAC;IAExF,MAAME,EAAE,GAAG,MAAMjB,OAAO,CAACkB,iBAAiB,CAACJ,cAAc,EAAE,KAAK,CAAC;IACjE,MAAMG,EAAE,CAACE,IAAI,CAAC,CAAC;IAEff,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAES,cAAc,CAAC;IACrD,OAAO,IAAI;EACf,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAACC,OAAO,CAAC;IACnE,MAAMD,KAAK;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}