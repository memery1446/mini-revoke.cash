{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/TokenAllowanceManager.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserProvider, Contract, parseUnits, formatUnits } from \"ethers\";\nimport { CONTRACT_ADDRESSES, TOKEN_ALLOWANCE_MANAGER_ABI } from \"../constants/abis\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TokenAllowanceManager = ({\n  wallet\n}) => {\n  _s();\n  // ‚úÖ Receive wallet from App.js\n  const [spender, setSpender] = useState(\"\");\n  const [allowance, setAllowance] = useState(null);\n  const [selectedToken, setSelectedToken] = useState(CONTRACT_ADDRESSES.TK1);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    console.log(\"‚úÖ TokenAllowanceManager component is rendering\");\n    console.log(\"üí° Wallet state:\", wallet);\n  }, [wallet]); // ‚úÖ Log when wallet updates\n\n  const checkAllowance = async () => {\n    try {\n      if (!wallet || !selectedToken || !spender) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      const provider = new BrowserProvider(window.ethereum);\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, provider);\n      const value = await contract.getAllowance(selectedToken, wallet, spender);\n      setAllowance(formatUnits(value, 18));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: wallet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Wallet Connected: \", wallet]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          setSelectedToken(e.target.value);\n          console.log(\"Selected token:\", e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: CONTRACT_ADDRESSES.TK1,\n          children: \"Test Token 1 (TK1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: CONTRACT_ADDRESSES.TK2,\n          children: \"Test Token 2 (TK2)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Spender Address\",\n        onChange: e => setSpender(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: checkAllowance,\n        children: \"Check Allowance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Allowance: \", allowance || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: [\"\\u274C \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD34 Please connect your wallet first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) // ‚úÖ Display message when wallet is not connected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenAllowanceManager, \"EH2/wxHTEtf/Rj+UAeEsb2eeE7g=\");\n_c = TokenAllowanceManager;\nexport default TokenAllowanceManager;\nvar _c;\n$RefreshReg$(_c, \"TokenAllowanceManager\");","map":{"version":3,"names":["React","useEffect","useState","BrowserProvider","Contract","parseUnits","formatUnits","CONTRACT_ADDRESSES","TOKEN_ALLOWANCE_MANAGER_ABI","jsxDEV","_jsxDEV","Fragment","_Fragment","TokenAllowanceManager","wallet","_s","spender","setSpender","allowance","setAllowance","selectedToken","setSelectedToken","TK1","error","setError","console","log","checkAllowance","alert","provider","window","ethereum","contract","TOKEN_ALLOWANCE_MANAGER","value","getAllowance","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","TK2","type","placeholder","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/TokenAllowanceManager.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BrowserProvider, Contract, parseUnits, formatUnits } from \"ethers\";\nimport { CONTRACT_ADDRESSES, TOKEN_ALLOWANCE_MANAGER_ABI } from \"../constants/abis\";\n\nconst TokenAllowanceManager = ({ wallet }) => {  // ‚úÖ Receive wallet from App.js\n  const [spender, setSpender] = useState(\"\");\n  const [allowance, setAllowance] = useState(null);\n  const [selectedToken, setSelectedToken] = useState(CONTRACT_ADDRESSES.TK1);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"‚úÖ TokenAllowanceManager component is rendering\");\n    console.log(\"üí° Wallet state:\", wallet);\n  }, [wallet]); // ‚úÖ Log when wallet updates\n\n  const checkAllowance = async () => {\n    try {\n      if (!wallet || !selectedToken || !spender) {\n        alert(\"Enter a spender address.\");\n        return;\n      }\n      const provider = new BrowserProvider(window.ethereum);\n      const contract = new Contract(CONTRACT_ADDRESSES.TOKEN_ALLOWANCE_MANAGER, TOKEN_ALLOWANCE_MANAGER_ABI, provider);\n      const value = await contract.getAllowance(selectedToken, wallet, spender);\n      setAllowance(formatUnits(value, 18));\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <div>\n      {/* ‚úÖ Render only if wallet is connected */}\n      {wallet ? (\n        <>\n          <h3>Wallet Connected: {wallet}</h3>\n          <select\n            onChange={(e) => {\n              setSelectedToken(e.target.value);\n              console.log(\"Selected token:\", e.target.value);\n            }}\n          >\n            <option value={CONTRACT_ADDRESSES.TK1}>Test Token 1 (TK1)</option>\n            <option value={CONTRACT_ADDRESSES.TK2}>Test Token 2 (TK2)</option>\n          </select>\n\n          <input type=\"text\" placeholder=\"Spender Address\" onChange={(e) => setSpender(e.target.value)} />\n          <button onClick={checkAllowance}>Check Allowance</button>\n          <p>Allowance: {allowance || \"N/A\"}</p>\n\n          {error && <p style={{ color: \"red\" }}>‚ùå {error}</p>}\n        </>\n      ) : (\n        <p>üî¥ Please connect your wallet first.</p> // ‚úÖ Display message when wallet is not connected\n      )}\n    </div>\n  );\n};\n\nexport default TokenAllowanceManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}