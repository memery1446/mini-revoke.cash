{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/WalletConnect.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(\"✅ WalletConnect.js file has loaded\");\nconst injected = new InjectedConnector({\n  supportedChainIds: [1, 5, 137]\n}); // ✅ Supports Ethereum, Goerli, Polygon\n\nconst WalletConnect = () => {\n  _s();\n  const {\n    activate,\n    account\n  } = useWeb3React();\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n      console.log(\"✅ Wallet connected:\", account);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Button, {\n    colorScheme: \"teal\",\n    onClick: connectWallet,\n    children: account ? `Connected: ${account}` : \"Connect Wallet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(WalletConnect, \"y1o8lD5MmhY4w7bKverhkd2jdMs=\", false, function () {\n  return [useWeb3React];\n});\n_c = WalletConnect;\nexport default WalletConnect;\nvar _c;\n$RefreshReg$(_c, \"WalletConnect\");","map":{"version":3,"names":["React","Button","useWeb3React","InjectedConnector","jsxDEV","_jsxDEV","console","log","injected","supportedChainIds","WalletConnect","_s","activate","account","connectWallet","error","colorScheme","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/WalletConnect.js"],"sourcesContent":["import React from \"react\";\nimport { Button } from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\n\nconsole.log(\"✅ WalletConnect.js file has loaded\");\n\nconst injected = new InjectedConnector({ supportedChainIds: [1, 5, 137] }); // ✅ Supports Ethereum, Goerli, Polygon\n\nconst WalletConnect = () => {\n  const { activate, account } = useWeb3React();\n\n  const connectWallet = async () => {\n    try {\n      await activate(injected);\n      console.log(\"✅ Wallet connected:\", account);\n    } catch (error) {\n      console.error(\"❌ Connection error:\", error);\n    }\n  };\n\n  return (\n    <Button colorScheme=\"teal\" onClick={connectWallet}>\n      {account ? `Connected: ${account}` : \"Connect Wallet\"}\n    </Button>\n  );\n};\n\nexport default WalletConnect;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnEC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;AAEjD,MAAMC,QAAQ,GAAG,IAAIL,iBAAiB,CAAC;EAAEM,iBAAiB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG;AAAE,CAAC,CAAC,CAAC,CAAC;;AAE5E,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGX,YAAY,CAAC,CAAC;EAE5C,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMF,QAAQ,CAACJ,QAAQ,CAAC;MACxBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEM,OAAO,CAAC;IAC7C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdT,OAAO,CAACS,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEV,OAAA,CAACJ,MAAM;IAACe,WAAW,EAAC,MAAM;IAACC,OAAO,EAAEH,aAAc;IAAAI,QAAA,EAC/CL,OAAO,GAAG,cAAcA,OAAO,EAAE,GAAG;EAAgB;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEb,CAAC;AAACX,EAAA,CAjBID,aAAa;EAAA,QACaR,YAAY;AAAA;AAAAqB,EAAA,GADtCb,aAAa;AAmBnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}