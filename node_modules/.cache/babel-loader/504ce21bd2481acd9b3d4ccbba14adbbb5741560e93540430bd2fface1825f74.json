{"ast":null,"code":"var _jsxFileName = \"/Users/markemery/mini.revoke/src/components/NFTApprovals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserProvider, Contract } from \"ethers\"; // ✅ Import provider correctly\nimport { getERC721Approvals } from \"../utils/nftApprovals\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NFTApprovals = ({\n  contractAddress\n}) => {\n  _s();\n  const [approvals, setApprovals] = useState(null);\n  useEffect(() => {\n    const fetchApprovals = async () => {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const ownerAddress = await signer.getAddress();\n      const approvalsData = await getERC721Approvals(contractAddress, ownerAddress, provider);\n      setApprovals(approvalsData);\n    };\n    fetchApprovals();\n  }, [contractAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"NFT Approvals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), approvals ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Global Approval: \", approvals.isApprovedForAll ? \"✅ Yes\" : \"❌ No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Token ID 1 Approval: \", approvals.approvedForToken || \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading approvals...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(NFTApprovals, \"CZiEPxUnFzh4w/Y4T3BlEBvC5Kw=\");\n_c = NFTApprovals;\nexport default NFTApprovals;\nvar _c;\n$RefreshReg$(_c, \"NFTApprovals\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","Contract","getERC721Approvals","jsxDEV","_jsxDEV","NFTApprovals","contractAddress","_s","approvals","setApprovals","fetchApprovals","provider","ethers","providers","Web3Provider","window","ethereum","signer","getSigner","ownerAddress","getAddress","approvalsData","children","fileName","_jsxFileName","lineNumber","columnNumber","isApprovedForAll","approvedForToken","_c","$RefreshReg$"],"sources":["/Users/markemery/mini.revoke/src/components/NFTApprovals.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserProvider, Contract } from \"ethers\"; // ✅ Import provider correctly\nimport { getERC721Approvals } from \"../utils/nftApprovals\";\n\nconst NFTApprovals = ({ contractAddress }) => {\n    const [approvals, setApprovals] = useState(null);\n\n    useEffect(() => {\n        const fetchApprovals = async () => {\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\n            const signer = provider.getSigner();\n            const ownerAddress = await signer.getAddress();\n\n            const approvalsData = await getERC721Approvals(contractAddress, ownerAddress, provider);\n            setApprovals(approvalsData);\n        };\n\n        fetchApprovals();\n    }, [contractAddress]);\n\n    return (\n        <div>\n            <h2>NFT Approvals</h2>\n            {approvals ? (\n                <ul>\n                    <li>Global Approval: {approvals.isApprovedForAll ? \"✅ Yes\" : \"❌ No\"}</li>\n                    <li>Token ID 1 Approval: {approvals.approvedForToken || \"None\"}</li>\n                </ul>\n            ) : (\n                <p>Loading approvals...</p>\n            )}\n        </div>\n    );\n};\n\nexport default NFTApprovals;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,EAAEC,QAAQ,QAAQ,QAAQ,CAAC,CAAC;AACpD,SAASC,kBAAkB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACZ,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMC,MAAM,GAAGN,QAAQ,CAACO,SAAS,CAAC,CAAC;MACnC,MAAMC,YAAY,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MAE9C,MAAMC,aAAa,GAAG,MAAMnB,kBAAkB,CAACI,eAAe,EAAEa,YAAY,EAAER,QAAQ,CAAC;MACvFF,YAAY,CAACY,aAAa,CAAC;IAC/B,CAAC;IAEDX,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACJ,eAAe,CAAC,CAAC;EAErB,oBACIF,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlB,SAAS,gBACNJ,OAAA;MAAAkB,QAAA,gBACIlB,OAAA;QAAAkB,QAAA,GAAI,mBAAiB,EAACd,SAAS,CAACmB,gBAAgB,GAAG,OAAO,GAAG,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACzEtB,OAAA;QAAAkB,QAAA,GAAI,uBAAqB,EAACd,SAAS,CAACoB,gBAAgB,IAAI,MAAM;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,gBAELtB,OAAA;MAAAkB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CA7BIF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}