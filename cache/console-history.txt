.exit
console.log("Fresh Approval After Revoking:", freshApproval);
freshApproval = await nft.isApprovedForAll(owner, spender);
await nft.setApprovalForAll(spender, false);
console.log("Fresh Approval Check:", freshApproval);
let freshApproval = await nft.isApprovedForAll(owner, spender);
let spender = "0x43c5df0c482c88cef8005389f64c362ee720a5bc";
let owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"; 
let nft = await ethers.getContractAt("TestNFT", "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b");
.exit
console.log("Fresh Approval Check:", freshApproval);
let freshApproval = await nft.isApprovedForAll(owner, spender);
let spender = "0x43c5df0c482c88cef8005389f64c362ee720a5bc"; // The operator/spender
let owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"; // Your wallet address
let nft = await ethers.getContractAt("TestNFT", "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b");
console.log("Fresh Approval Check:", freshApproval);
let freshApproval = await nft.isApprovedForAll(owner, spender);
console.log("Fresh Approval Check:", freshApproval);
const freshApproval = await nft.isApprovedForAll(owner, spender);
const spender = "0x43c5df0c482c88cef8005389f64c362ee720a5bc"; // The operator/spender
const owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"; // Your wallet address
const nft = await ethers.getContractAt("TestNFT", "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b");
console.log("Fresh Approval Check:", freshApproval);
const freshApproval = await nft.isApprovedForAll(owner, spender);
.exit
console.log("Approval Events:", approvalEvents);
const approvalEvents = await nft.queryFilter("ApprovalForAll");
console.log("Transaction Receipt:", transactionReceipt);
const transactionReceipt = await ethers.provider.getTransactionReceipt("0xdac6db42ea03f8d54f6929ec0252f9ae78760c2a9feaadb0a8a9021d54343e77");
console.log("Latest Block:", latestBlock);
const latestBlock = await ethers.provider.getBlockNumber();
console.log("Approval Status After Setting:", isApproved);
const isApproved = await nft.isApprovedForAll(owner, spender);
await nft.setApprovalForAll(spender, true);
console.log("Approval Status After Setting:", isApproved);
const isApproved = await nft.isApprovedForAll(owner, spender);
await nft.setApprovalForAll(spender, true);
console.log("Approval Status:", isApproved);
const isApproved = await nft.isApprovedForAll(owner, spender);
const spender = "0x43c5df0c482c88cef8005389f64c362ee720a5bc";
const owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266";
console.log(nft.interface.fragments.map(f => f.name));
const nft = await ethers.getContractAt("TestNFT", "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b");
console.log("üîç Approval Status:", isApproved);
const isApproved = await nft.isApprovedForAll(owner, spender);
const spender = "0x43c5df0c482c88cef8005389f64c362ee720a5bc"; // Spender to check
const owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"; // Your account
const nft = await ethers.getContractAt("TestNFT", "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b");
console.log(code !== "0x" ? "‚úÖ Contract is deployed" : "‚ùå No contract at this address");
const code = await ethers.provider.getCode(contractAddress);
const contractAddress = "0x103416cfCD0D0a32b904Ab4fb69dF6E5B5aaDf2b"; // Replace with your NFT contract
// Check if a contract is deployed at an address (Example: TestNFT)
console.log("Current Block:", blockNumber);
const blockNumber = await ethers.provider.getBlockNumber();
// Check the current block number
await ethers.provider.getNetwork()
console.log(await nftContract.isApprovedForAll("0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266", "0x43c5df0c482c88cef8005389f64c362ee720a5bc"));
const nftContract = await ethers.getContractAt("TestNFT", "0xYourNewNFTContractAddress");